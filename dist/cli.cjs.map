{"version":3,"file":"cli.cjs","sources":["webpack://random-points-generator/webpack/runtime/compat_get_default_export","webpack://random-points-generator/webpack/runtime/define_property_getters","webpack://random-points-generator/webpack/runtime/has_own_property","webpack://random-points-generator/./src/cli.ts"],"sourcesContent":["// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* eslint no-console: \"off\" */\n\nimport fs from 'fs';\nimport util from 'util';\nimport yargs from 'yargs';\n\nimport { RandomGenerator } from './index';\n\ninterface ArgvOptions {\n  number: number;\n  format?: 'geojson' | 'csv';\n  export?: 'console' | 'file';\n  verbose?: boolean;\n  xmin?: number;\n  ymin?: number;\n  xmax?: number;\n  ymax?: number;\n  i?: string;\n  [key: string]: unknown;\n}\n\nexport type Options = {\n  number: number;\n  verbose?: boolean;\n  bbox?: [number, number, number, number];\n  features?: GeoJSON.FeatureCollection;\n  format?: 'geojson' | 'csv';\n  export?: 'console' | 'file';\n};\nconst options: Options = {\n  number: 10,\n};\n\nconst argv = yargs(process.argv.slice(2))\n  .usage(`Usage: random-points-generator [options]`)\n  .help('h')\n  .alias('help', 'h')\n  .alias('input', 'i')\n  .alias('number', 'n')\n  .alias('format', 'f')\n  .alias('export', 'e')\n  .alias('verbose', 'v')\n  .default('number', 10)\n  .default('verbose', false)\n  .example(\n    'random-points-generator',\n    'Generates 10 random coordinates, output to console in GeoJSON format'\n  )\n  .example(\n    'random-points-generator -n 1000 --xmin=-2 --xmax=4 --ymin=-45 --ymax=50',\n    'Generates 1000 random coordinates with these bounding box'\n  )\n  .example(\n    'random-points-generator -i world_countries.geojson',\n    'Generates 10 random coordinates within polygons from file world_countries.geojson'\n  )\n  .parseSync() as ArgvOptions;\n\noptions.number = argv.number;\noptions.format = argv.format;\noptions.export = argv.export;\noptions.verbose = argv.verbose;\n\nif (options.verbose) {\n  console.log(\n    'Running random-points-generator with',\n    util.inspect(argv, {\n      depth: null,\n    })\n  );\n}\nif (\n  argv.xmin !== undefined &&\n  argv.ymin !== undefined &&\n  argv.xmax !== undefined &&\n  argv.ymax !== undefined\n) {\n  options.bbox = [argv.xmin, argv.ymin, argv.xmax, argv.ymax];\n}\n\nif (argv.i) {\n  if (options.verbose) {\n    console.log(`file ${argv.i}`);\n  }\n  options.features = JSON.parse(\n    fs.readFileSync(argv.i, 'utf8')\n  ) as GeoJSON.FeatureCollection;\n}\n\nconst points = RandomGenerator.random(options.number, options);\n\nconsole.log(JSON.stringify(points));\n"],"names":["__webpack_require__","module","getter","definition","key","Object","obj","prop","options","argv","yargs","process","console","util","undefined","JSON","fs","points","RandomGenerator"],"mappings":";;;IACAA,oBAAoB,CAAC,GAAG,CAACC;QACxB,IAAIC,SAASD,UAAUA,OAAO,UAAU,GACvC,IAAOA,MAAM,CAAC,UAAU,GACxB,IAAOA;QACRD,oBAAoB,CAAC,CAACE,QAAQ;YAAE,GAAGA;QAAO;QAC1C,OAAOA;IACR;;;ICPAF,oBAAoB,CAAC,GAAG,CAAC,UAASG;QACjC,IAAI,IAAIC,OAAOD,WACR,IAAGH,oBAAoB,CAAC,CAACG,YAAYC,QAAQ,CAACJ,oBAAoB,CAAC,CAAC,UAASI,MACzEC,OAAO,cAAc,CAAC,UAASD,KAAK;YAAE,YAAY;YAAM,KAAKD,UAAU,CAACC,IAAI;QAAC;IAGzF;;;ICNAJ,oBAAoB,CAAC,GAAG,CAACM,KAAKC,OAAUF,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAACC,KAAKC;;;;;;;;;;AC6BlF,MAAMC,UAAmB;IACvB,QAAQ;AACV;AAEA,MAAMC,OAAOC,yBAAMC,QAAQ,IAAI,CAAC,KAAK,CAAC,IACnC,KAAK,CAAC,4CACN,IAAI,CAAC,KACL,KAAK,CAAC,QAAQ,KACd,KAAK,CAAC,SAAS,KACf,KAAK,CAAC,UAAU,KAChB,KAAK,CAAC,UAAU,KAChB,KAAK,CAAC,UAAU,KAChB,KAAK,CAAC,WAAW,KACjB,OAAO,CAAC,UAAU,IAClB,OAAO,CAAC,WAAW,OACnB,OAAO,CACN,2BACA,wEAED,OAAO,CACN,2EACA,6DAED,OAAO,CACN,sDACA,qFAED,SAAS;AAEZH,QAAQ,MAAM,GAAGC,KAAK,MAAM;AAC5BD,QAAQ,MAAM,GAAGC,KAAK,MAAM;AAC5BD,QAAQ,MAAM,GAAGC,KAAK,MAAM;AAC5BD,QAAQ,OAAO,GAAGC,KAAK,OAAO;AAE9B,IAAID,QAAQ,OAAO,EACjBI,QAAQ,GAAG,CACT,wCACAC,wBAAAA,OAAY,CAACJ,MAAM;IACjB,OAAO;AACT;AAGJ,IACEA,AAAcK,WAAdL,KAAK,IAAI,IACTA,AAAcK,WAAdL,KAAK,IAAI,IACTA,AAAcK,WAAdL,KAAK,IAAI,IACTA,AAAcK,WAAdL,KAAK,IAAI,EAETD,QAAQ,IAAI,GAAG;IAACC,KAAK,IAAI;IAAEA,KAAK,IAAI;IAAEA,KAAK,IAAI;IAAEA,KAAK,IAAI;CAAC;AAG7D,IAAIA,KAAK,CAAC,EAAE;IACV,IAAID,QAAQ,OAAO,EACjBI,QAAQ,GAAG,CAAC,CAAC,KAAK,EAAEH,KAAK,CAAC,EAAE;IAE9BD,QAAQ,QAAQ,GAAGO,KAAK,KAAK,CAC3BC,sBAAAA,YAAe,CAACP,KAAK,CAAC,EAAE;AAE5B;AAEA,MAAMQ,SAASC,mCAAAA,eAAAA,CAAAA,MAAsB,CAACV,QAAQ,MAAM,EAAEA;AAEtDI,QAAQ,GAAG,CAACG,KAAK,SAAS,CAACE"}
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.geotools=t():e.geotools=t()}(self,(()=>{return e={38:(e,t,r)=>{const n=r(618),o=r(156),i=r(516),a=r(955),u=r(356);e.exports={randomPoint:o.randomPoint,unkinkPolygon:n,bbox:i.default,pointsWithinPolygon:a,featureCollection:u.featureCollection}},81:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(639);function o(e,t,r){var n=!1;t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]&&(t=t.slice(0,t.length-1));for(var o=0,i=t.length-1;o<t.length;i=o++){var a=t[o][0],u=t[o][1],l=t[i][0],s=t[i][1];if(e[1]*(a-l)+u*(l-e[0])+s*(e[0]-a)===0&&(a-e[0])*(l-e[0])<=0&&(u-e[1])*(s-e[1])<=0)return!r;u>e[1]!=s>e[1]&&e[0]<(l-a)*(e[1]-u)/(s-u)+a&&(n=!n)}return n}t.default=function(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");var i=n.getCoord(e),a=n.getGeom(t),u=a.type,l=t.bbox,s=a.coordinates;if(l&&!1===function(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}(i,l))return!1;"Polygon"===u&&(s=[s]);for(var c=!1,f=0;f<s.length&&!c;f++)if(o(i,s[f][0],r.ignoreBoundary)){for(var h=!1,g=1;g<s[f].length&&!h;)o(i,s[f][g],!r.ignoreBoundary)&&(h=!0),g++;h||(c=!0)}return c}},93:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(533),o=6378137;function i(e){var t=0;if(e&&e.length>0){t+=Math.abs(a(e[0]));for(var r=1;r<e.length;r++)t-=Math.abs(a(e[r]))}return t}function a(e){var t,r,n,i,a,l,s=0,c=e.length;if(c>2){for(l=0;l<c;l++)l===c-2?(n=c-2,i=c-1,a=0):l===c-1?(n=c-1,i=0,a=1):(n=l,i=l+1,a=l+2),t=e[n],r=e[i],s+=(u(e[a][0])-u(t[0]))*Math.sin(u(r[1]));s=s*o*o/2}return s}function u(e){return e*Math.PI/180}t.default=function(e){return n.geomReduce(e,(function(e,t){return e+function(e){var t,r=0;switch(e.type){case"Polygon":return i(e.coordinates);case"MultiPolygon":for(t=0;t<e.coordinates.length;t++)r+=i(e.coordinates[t]);return r;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(t)}),0)}},156:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(356);function o(e){return Array.isArray(e)?l(e):e&&e.bbox?l(e.bbox):[360*u(),180*u()]}function i(e){null!=e&&(Array.isArray(e)?n.validateBBox.call(void 0,e):null!=e.bbox&&n.validateBBox.call(void 0,e.bbox))}function a(e){return t=>[t[0]+e[0],t[1]+e[1]]}function u(){return Math.random()-.5}function l(e){return[Math.random()*(e[2]-e[0])+e[0],Math.random()*(e[3]-e[1])+e[1]]}t.randomLineString=function(e,t={}){if(t=t||{},!n.isObject.call(void 0,t))throw new Error("options is invalid");const r=t.bbox;i(r);let a=t.num_vertices,u=t.max_length,l=t.max_rotation;null==e&&(e=1),(!n.isNumber.call(void 0,a)||void 0===a||a<2)&&(a=10),n.isNumber.call(void 0,u)&&void 0!==u||(u=1e-4),n.isNumber.call(void 0,l)&&void 0!==l||(l=Math.PI/8);const s=[];for(let t=0;t<e;t++){const e=[o(r)];for(let t=0;t<a-1;t++){const r=(0===t?2*Math.random()*Math.PI:Math.tan((e[t][1]-e[t-1][1])/(e[t][0]-e[t-1][0])))+(Math.random()-.5)*l*2,n=Math.random()*u;e.push([e[t][0]+n*Math.cos(r),e[t][1]+n*Math.sin(r)])}s.push(n.lineString.call(void 0,e))}return n.featureCollection.call(void 0,s)},t.randomPoint=function(e,t={}){i(t.bbox),null==e&&(e=1);const r=[];for(let i=0;i<e;i++)r.push(n.point.call(void 0,o(t.bbox)));return n.featureCollection.call(void 0,r)},t.randomPolygon=function(e,t={}){i(t.bbox),null==e&&(e=1),void 0!==t.bbox&&null!==t.bbox||(t.bbox=[-180,-90,180,90]),n.isNumber.call(void 0,t.num_vertices)&&void 0!==t.num_vertices||(t.num_vertices=10),n.isNumber.call(void 0,t.max_radial_length)&&void 0!==t.max_radial_length||(t.max_radial_length=10);const r=Math.abs(t.bbox[0]-t.bbox[2]),u=Math.abs(t.bbox[1]-t.bbox[3]),l=Math.min(r/2,u/2);if(t.max_radial_length>l)throw new Error("max_radial_length is greater than the radius of the bbox");const s=[t.bbox[0]+t.max_radial_length,t.bbox[1]+t.max_radial_length,t.bbox[2]-t.max_radial_length,t.bbox[3]-t.max_radial_length],c=[];for(let r=0;r<e;r++){let e=[];const r=[...Array(t.num_vertices+1)].map(Math.random);r.forEach(((e,t,r)=>{r[t]=t>0?e+r[t-1]:e})),r.forEach((n=>{n=2*n*Math.PI/r[r.length-1];const o=Math.random();e.push([o*(t.max_radial_length||10)*Math.sin(n),o*(t.max_radial_length||10)*Math.cos(n)])})),e[e.length-1]=e[0],e=e.reverse().map(a(o(s))),c.push(n.polygon.call(void 0,[e]))}return n.featureCollection.call(void 0,c)},t.randomPosition=function(e){return i(e),o(e)}},193:(e,t)=>{"use strict";function r(e,t,r){void 0===r&&(r={});var n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function n(e,t,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!g(e[0])||!g(e[1]))throw new Error("coordinates must contain numbers");return r({type:"Point",coordinates:e},t,n)}function o(e,t,n){void 0===n&&(n={});for(var o=0,i=e;o<i.length;o++){var a=i[o];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return r({type:"Polygon",coordinates:e},t,n)}function i(e,t,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return r({type:"LineString",coordinates:e},t,n)}function a(e,t){void 0===t&&(t={});var r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function u(e,t,n){return void 0===n&&(n={}),r({type:"MultiLineString",coordinates:e},t,n)}function l(e,t,n){return void 0===n&&(n={}),r({type:"MultiPoint",coordinates:e},t,n)}function s(e,t,n){return void 0===n&&(n={}),r({type:"MultiPolygon",coordinates:e},t,n)}function c(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e*n}function f(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e/n}function h(e){return e%(2*Math.PI)*180/Math.PI}function g(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.earthRadius=6371008.8,t.factors={centimeters:100*t.earthRadius,centimetres:100*t.earthRadius,degrees:t.earthRadius/111325,feet:3.28084*t.earthRadius,inches:39.37*t.earthRadius,kilometers:t.earthRadius/1e3,kilometres:t.earthRadius/1e3,meters:t.earthRadius,metres:t.earthRadius,miles:t.earthRadius/1609.344,millimeters:1e3*t.earthRadius,millimetres:1e3*t.earthRadius,nauticalmiles:t.earthRadius/1852,radians:1,yards:1.0936*t.earthRadius},t.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/t.earthRadius,yards:1.0936133},t.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},t.feature=r,t.geometry=function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return n(t).geometry;case"LineString":return i(t).geometry;case"Polygon":return o(t).geometry;case"MultiPoint":return l(t).geometry;case"MultiLineString":return u(t).geometry;case"MultiPolygon":return s(t).geometry;default:throw new Error(e+" is invalid")}},t.point=n,t.points=function(e,t,r){return void 0===r&&(r={}),a(e.map((function(e){return n(e,t)})),r)},t.polygon=o,t.polygons=function(e,t,r){return void 0===r&&(r={}),a(e.map((function(e){return o(e,t)})),r)},t.lineString=i,t.lineStrings=function(e,t,r){return void 0===r&&(r={}),a(e.map((function(e){return i(e,t)})),r)},t.featureCollection=a,t.multiLineString=u,t.multiPoint=l,t.multiPolygon=s,t.geometryCollection=function(e,t,n){return void 0===n&&(n={}),r({type:"GeometryCollection",geometries:e},t,n)},t.round=function(e,t){if(void 0===t&&(t=0),t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r},t.radiansToLength=c,t.lengthToRadians=f,t.lengthToDegrees=function(e,t){return h(f(e,t))},t.bearingToAzimuth=function(e){var t=e%360;return t<0&&(t+=360),t},t.radiansToDegrees=h,t.degreesToRadians=function(e){return e%360*Math.PI/180},t.convertLength=function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,t),r)},t.convertArea=function(e,r,n){if(void 0===r&&(r="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=t.areaFactors[r];if(!o)throw new Error("invalid original units");var i=t.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i},t.isNumber=g,t.isObject=function(e){return!!e&&e.constructor===Object},t.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!g(e))throw new Error("bbox must only contain numbers")}))},t.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},237:(e,t,r)=>{const n=r(672);e.exports={random:n}},356:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=6371008.8,n={centimeters:637100880,centimetres:637100880,degrees:360/(2*Math.PI),feet:20902260.511392,inches:39.37*r,kilometers:6371.0088,kilometres:6371.0088,meters:r,metres:r,miles:3958.761333810546,millimeters:6371008800,millimetres:6371008800,nauticalmiles:r/1852,radians:1,yards:6967335.223679999},o={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,nauticalmiles:2.9155334959812285e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046};function i(e,t,r={}){const n={type:"Feature"};return(0===r.id||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function a(e,t,r={}){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!p(e[0])||!p(e[1]))throw new Error("coordinates must contain numbers");return i({type:"Point",coordinates:e},t,r)}function u(e,t,r={}){for(const t of e){if(t.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(t[t.length-1].length!==t[0].length)throw new Error("First and last Position are not equivalent.");for(let e=0;e<t[t.length-1].length;e++)if(t[t.length-1][e]!==t[0][e])throw new Error("First and last Position are not equivalent.")}return i({type:"Polygon",coordinates:e},t,r)}function l(e,t,r={}){if(e.length<2)throw new Error("coordinates must be an array of two or more positions");return i({type:"LineString",coordinates:e},t,r)}function s(e,t={}){const r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function c(e,t,r={}){return i({type:"MultiLineString",coordinates:e},t,r)}function f(e,t,r={}){return i({type:"MultiPoint",coordinates:e},t,r)}function h(e,t,r={}){return i({type:"MultiPolygon",coordinates:e},t,r)}function g(e,t="kilometers"){const r=n[t];if(!r)throw new Error(t+" units is invalid");return e*r}function d(e,t="kilometers"){const r=n[t];if(!r)throw new Error(t+" units is invalid");return e/r}function m(e){return e%(2*Math.PI)*180/Math.PI}function p(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}t.areaFactors=o,t.azimuthToBearing=function(e){return(e%=360)>180?e-360:e<-180?e+360:e},t.bearingToAzimuth=function(e){let t=e%360;return t<0&&(t+=360),t},t.convertArea=function(e,t="meters",r="kilometers"){if(!(e>=0))throw new Error("area must be a positive number");const n=o[t];if(!n)throw new Error("invalid original units");const i=o[r];if(!i)throw new Error("invalid final units");return e/n*i},t.convertLength=function(e,t="kilometers",r="kilometers"){if(!(e>=0))throw new Error("length must be a positive number");return g(d(e,t),r)},t.degreesToRadians=function(e){return e%360*Math.PI/180},t.earthRadius=r,t.factors=n,t.feature=i,t.featureCollection=s,t.geometry=function(e,t,r={}){switch(e){case"Point":return a(t).geometry;case"LineString":return l(t).geometry;case"Polygon":return u(t).geometry;case"MultiPoint":return f(t).geometry;case"MultiLineString":return c(t).geometry;case"MultiPolygon":return h(t).geometry;default:throw new Error(e+" is invalid")}},t.geometryCollection=function(e,t,r={}){return i({type:"GeometryCollection",geometries:e},t,r)},t.isNumber=p,t.isObject=function(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)},t.lengthToDegrees=function(e,t){return m(d(e,t))},t.lengthToRadians=d,t.lineString=l,t.lineStrings=function(e,t,r={}){return s(e.map((e=>l(e,t))),r)},t.multiLineString=c,t.multiPoint=f,t.multiPolygon=h,t.point=a,t.points=function(e,t,r={}){return s(e.map((e=>a(e,t))),r)},t.polygon=u,t.polygons=function(e,t,r={}){return s(e.map((e=>u(e,t))),r)},t.radiansToDegrees=m,t.radiansToLength=g,t.round=function(e,t=0){if(t&&!(t>=0))throw new Error("precision must be a positive number");const r=Math.pow(10,t||0);return Math.round(e*r)/r},t.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((e=>{if(!p(e))throw new Error("bbox must only contain numbers")}))},t.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},516:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(720);function o(e,t={}){if(null!=e.bbox&&!0!==t.recompute)return e.bbox;const r=[1/0,1/0,-1/0,-1/0];return n.coordEach.call(void 0,e,(e=>{r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}var i=o;t.bbox=o,t.default=i},533:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(193);function o(e,t,r){if(null!==e)for(var n,i,a,u,l,s,c,f,h=0,g=0,d=e.type,m="FeatureCollection"===d,p="Feature"===d,y=m?e.features.length:1,v=0;v<y;v++){l=(f=!!(c=m?e.features[v].geometry:p?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var b=0;b<l;b++){var w=0,x=0;if(null!==(u=f?c.geometries[b]:c)){s=u.coordinates;var E=u.type;switch(h=!r||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===t(s,g,v,w,x))return!1;g++,w++;break;case"LineString":case"MultiPoint":for(n=0;n<s.length;n++){if(!1===t(s[n],g,v,w,x))return!1;g++,"MultiPoint"===E&&w++}"LineString"===E&&w++;break;case"Polygon":case"MultiLineString":for(n=0;n<s.length;n++){for(i=0;i<s[n].length-h;i++){if(!1===t(s[n][i],g,v,w,x))return!1;g++}"MultiLineString"===E&&w++,"Polygon"===E&&x++}"Polygon"===E&&w++;break;case"MultiPolygon":for(n=0;n<s.length;n++){for(x=0,i=0;i<s[n].length;i++){for(a=0;a<s[n][i].length-h;a++){if(!1===t(s[n][i][a],g,v,w,x))return!1;g++}x++}w++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===o(u.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function u(e,t){var r,n,o,i,a,u,l,s,c,f,h=0,g="FeatureCollection"===e.type,d="Feature"===e.type,m=g?e.features.length:1;for(r=0;r<m;r++){for(u=g?e.features[r].geometry:d?e.geometry:e,s=g?e.features[r].properties:d?e.properties:{},c=g?e.features[r].bbox:d?e.bbox:void 0,f=g?e.features[r].id:d?e.id:void 0,a=(l=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,o=0;o<a;o++)if(null!==(i=l?u.geometries[o]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,h,s,c,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],h,s,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,h,s,c,f))return!1;h++}}function l(e,t){u(e,(function(e,r,o,i,a){var u,l=null===e?null:e.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==t(n.feature(e,o,{bbox:i,id:a}),r,0)&&void 0}switch(l){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var s=0;s<e.coordinates.length;s++){var c={type:u,coordinates:e.coordinates[s]};if(!1===t(n.feature(c,o),r,s))return!1}}))}function s(e,t){l(e,(function(e,r,i){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var l,s=0,c=0,f=0;return!1!==o(e,(function(o,u,h,g,d){if(void 0===l||r>s||g>c||d>f)return l=o,s=r,c=g,f=d,void(a=0);var m=n.lineString([l,o],e.properties);if(!1===t(m,r,i,d,a))return!1;a++,l=o}))&&void 0}}}))}function c(e,t){if(!e)throw new Error("geojson is required");l(e,(function(e,r,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,o,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===t(n.lineString(a[u],e.properties),r,o,u))return!1}}}))}t.coordAll=function(e){var t=[];return o(e,(function(e){t.push(e)})),t},t.coordEach=o,t.coordReduce=function(e,t,r,n){var i=r;return o(e,(function(e,n,o,a,u){i=0===n&&void 0===r?e:t(i,e,n,o,a,u)}),n),i},t.featureEach=a,t.featureReduce=function(e,t,r){var n=r;return a(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.findPoint=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.coordIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":return n.point(s,l,t);case"MultiPoint":return i<0&&(i=s.length+i),n.point(s[i],l,t);case"LineString":return u<0&&(u=s.length+u),n.point(s[u],l,t);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u),n.point(s[a][u],l,t);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),n.point(s[i][u],l,t);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u),n.point(s[i][a][u],l,t)}throw new Error("geojson is invalid")},t.findSegment=function(e,t){if(t=t||{},!n.isObject(t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.segmentIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=s.length+u-1),n.lineString([s[u],s[u+1]],l,t);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u-1),n.lineString([s[a][u],s[a][u+1]],l,t);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u-1),n.lineString([s[i][u],s[i][u+1]],l,t);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u-1),n.lineString([s[i][a][u],s[i][a][u+1]],l,t)}throw new Error("geojson is invalid")},t.flattenEach=l,t.flattenReduce=function(e,t,r){var n=r;return l(e,(function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)})),n},t.geomEach=u,t.geomReduce=function(e,t,r){var n=r;return u(e,(function(e,o,i,a,u){n=0===o&&void 0===r?e:t(n,e,o,i,a,u)})),n},t.lineEach=c,t.lineReduce=function(e,t,r){var n=r;return c(e,(function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)})),n},t.propEach=i,t.propReduce=function(e,t,r){var n=r;return i(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.segmentEach=s,t.segmentReduce=function(e,t,r){var n=r,o=!1;return s(e,(function(e,i,a,u,l){n=!1===o&&void 0===r?e:t(n,e,i,a,u,l),o=!0})),n}},618:(e,t,r)=>{"use strict";var n=r(533),o=r(193),i=r(941),a=r(93),u=r(81);function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=l(i),c=l(a),f=l(u);function h(e,t){if(!e||!t)return!1;if(e.length!==t.length)return!1;for(var r=0,n=e.length;r<n;r++)if(e[r]instanceof Array&&t[r]instanceof Array){if(!h(e[r],t[r]))return!1}else if(e[r]!==t[r])return!1;return!0}function g(e){if("Feature"!=e.type)throw new Error("The input must a geojson object of type Feature");if(void 0===e.geometry||null==e.geometry)throw new Error("The input must a geojson object with a non-empty geometry");if("Polygon"!=e.geometry.type)throw new Error("The input must be a geojson Polygon");for(var t=e.geometry.coordinates.length,r=[],n=0;n<t;n++){var i=e.geometry.coordinates[n];v(i[0],i[i.length-1])||i.push(i[0]),r.push.apply(r,i.slice(0,i.length-1))}if(!function(e){for(var t={},r=1,n=0,o=e.length;n<o;++n){if(Object.prototype.hasOwnProperty.call(t,e[n])){r=0;break}t[e[n]]=1}return r}(r))throw new Error("The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)");var a=r.length,u=function(e,t,r){if("Polygon"!==e.geometry.type)throw new Error("The input feature must be a Polygon");void 0===r&&(r=1);var n=e.geometry.coordinates,o=[],i={};if(r){for(var a=[],u=0;u<n.length;u++)for(var l=0;l<n[u].length-1;l++)a.push(y(u,l));var c=s.default();c.load(a)}for(var f=0;f<n.length;f++)for(var g=0;g<n[f].length-1;g++)if(r)c.search(y(f,g)).forEach((function(e){var t=e.ring,r=e.edge;p(f,g,t,r)}));else for(var d=0;d<n.length;d++)for(var m=0;m<n[d].length-1;m++)p(f,g,d,m);return t||(o={type:"Feature",geometry:{type:"MultiPoint",coordinates:o}}),o;function p(e,r,a,u){var l,s,c=n[e][r],f=n[e][r+1],g=n[a][u],d=n[a][u+1],m=function(e,t,r,n){if(h(e,r)||h(e,n)||h(t,r)||h(n,r))return null;var o=e[0],i=e[1],a=t[0],u=t[1],l=r[0],s=r[1],c=n[0],f=n[1],g=(o-a)*(s-f)-(i-u)*(l-c);return 0===g?null:[((o*u-i*a)*(l-c)-(o-a)*(l*f-s*c))/g,((o*u-i*a)*(s-f)-(i-u)*(l*f-s*c))/g]}(c,f,g,d);if(null!==m&&(l=f[0]!==c[0]?(m[0]-c[0])/(f[0]-c[0]):(m[1]-c[1])/(f[1]-c[1]),s=d[0]!==g[0]?(m[0]-g[0])/(d[0]-g[0]):(m[1]-g[1])/(d[1]-g[1]),!(l>=1||l<=0||s>=1||s<=0))){var p=m,y=!i[p];y&&(i[p]=!0),t?o.push(t(m,e,r,c,f,l,a,u,g,d,s,y)):o.push(m)}}function y(e,t){var r,o,i,a,u=n[e][t],l=n[e][t+1];return u[0]<l[0]?(r=u[0],o=l[0]):(r=l[0],o=u[0]),u[1]<l[1]?(i=u[1],a=l[1]):(i=l[1],a=u[1]),{minX:r,minY:i,maxX:o,maxY:a,ring:e,edge:t}}}(e,(function(e,t,r,n,o,i,a,u,l,s,c,f){return[e,t,r,n,o,i,a,u,l,s,c,f]})),l=u.length;if(0==l){var g=[];for(n=0;n<t;n++)g.push(o.polygon([e.geometry.coordinates[n]],{parent:-1,winding:y(e.geometry.coordinates[n])}));var w=o.featureCollection(g);return z(),H(),w}var x=[],E=[];for(n=0;n<t;n++){x.push([]);for(var P=0;P<e.geometry.coordinates[n].length-1;P++)x[n].push([new d(e.geometry.coordinates[n][b(P+1,e.geometry.coordinates[n].length-1)],1,[n,P],[n,b(P+1,e.geometry.coordinates[n].length-1)],void 0)]),E.push(new m(e.geometry.coordinates[n][P],[n,b(P-1,e.geometry.coordinates[n].length-1)],[n,P],void 0,void 0,!1,!0))}for(n=0;n<l;n++)x[u[n][1]][u[n][2]].push(new d(u[n][0],u[n][5],[u[n][1],u[n][2]],[u[n][6],u[n][7]],void 0)),u[n][11]&&E.push(new m(u[n][0],[u[n][1],u[n][2]],[u[n][6],u[n][7]],void 0,void 0,!0,!0));var M=E.length;for(n=0;n<x.length;n++)for(P=0;P<x[n].length;P++)x[n][P].sort((function(e,t){return e.param<t.param?-1:1}));var A=[];for(n=0;n<M;n++)A.push({minX:E[n].coord[0],minY:E[n].coord[1],maxX:E[n].coord[0],maxY:E[n].coord[1],index:n});var k=s.default();for(k.load(A),n=0;n<x.length;n++)for(P=0;P<x[n].length;P++)for(var _=0;_<x[n][P].length;_++){I=_==x[n][P].length-1?x[n][b(P+1,e.geometry.coordinates[n].length-1)][0].coord:x[n][P][_+1].coord;var S=k.search({minX:I[0],minY:I[1],maxX:I[0],maxY:I[1]})[0];x[n][P][_].nxtIsectAlongEdgeIn=S.index}for(n=0;n<x.length;n++)for(P=0;P<x[n].length;P++)for(_=0;_<x[n][P].length;_++){var I=x[n][P][_].coord,F=(S=k.search({minX:I[0],minY:I[1],maxX:I[0],maxY:I[1]})[0]).index;F<a?E[F].nxtIsectAlongRingAndEdge2=x[n][P][_].nxtIsectAlongEdgeIn:v(E[F].ringAndEdge1,x[n][P][_].ringAndEdgeIn)?E[F].nxtIsectAlongRingAndEdge1=x[n][P][_].nxtIsectAlongEdgeIn:E[F].nxtIsectAlongRingAndEdge2=x[n][P][_].nxtIsectAlongEdgeIn}var L=[];for(n=0,P=0;P<t;P++){var R=n;for(_=0;_<e.geometry.coordinates[P].length-1;_++)E[n].coord[0]<E[R].coord[0]&&(R=n),n++;var C=E[R].nxtIsectAlongRingAndEdge2;for(_=0;_<E.length;_++)if(E[_].nxtIsectAlongRingAndEdge1==R||E[_].nxtIsectAlongRingAndEdge2==R){var Y=_;break}var B=p([E[Y].coord,E[R].coord,E[C].coord],!0)?1:-1;L.push({isect:R,parent:-1,winding:B})}for(L.sort((function(e,t){return E[e.isect].coord>E[t.isect].coord?-1:1})),g=[];L.length>0;){var X=L.pop(),j=X.isect,O=X.parent,T=X.winding,q=g.length,G=[E[j].coord],N=j;if(E[j].ringAndEdge1Walkable)var W=E[j].ringAndEdge1,D=E[j].nxtIsectAlongRingAndEdge1;else W=E[j].ringAndEdge2,D=E[j].nxtIsectAlongRingAndEdge2;for(;!v(E[j].coord,E[D].coord);){G.push(E[D].coord);var J=void 0;for(n=0;n<L.length;n++)if(L[n].isect==D){J=n;break}if(null!=J&&L.splice(J,1),v(W,E[D].ringAndEdge1)){if(W=E[D].ringAndEdge2,E[D].ringAndEdge2Walkable=!1,E[D].ringAndEdge1Walkable){var U={isect:D};p([E[N].coord,E[D].coord,E[E[D].nxtIsectAlongRingAndEdge2].coord],1==T)?(U.parent=O,U.winding=-T):(U.parent=q,U.winding=T),L.push(U)}N=D,D=E[D].nxtIsectAlongRingAndEdge2}else W=E[D].ringAndEdge1,E[D].ringAndEdge1Walkable=!1,E[D].ringAndEdge2Walkable&&(U={isect:D},p([E[N].coord,E[D].coord,E[E[D].nxtIsectAlongRingAndEdge1].coord],1==T)?(U.parent=O,U.winding=-T):(U.parent=q,U.winding=T),L.push(U)),N=D,D=E[D].nxtIsectAlongRingAndEdge1}G.push(E[D].coord),g.push(o.polygon([G],{index:q,parent:O,winding:T,netWinding:void 0}))}function z(){for(var e=[],t=0;t<w.features.length;t++)-1==w.features[t].properties.parent&&e.push(t);if(e.length>1)for(t=0;t<e.length;t++){for(var r=-1,n=1/0,o=0;o<w.features.length;o++)e[t]!=o&&f.default(w.features[e[t]].geometry.coordinates[0][0],w.features[o],{ignoreBoundary:!0})&&c.default(w.features[o])<n&&(r=o);w.features[e[t]].properties.parent=r}}function H(){for(var e=0;e<w.features.length;e++)if(-1==w.features[e].properties.parent){var t=w.features[e].properties.winding;w.features[e].properties.netWinding=t,K(e,t)}}function K(e,t){for(var r=0;r<w.features.length;r++)if(w.features[r].properties.parent==e){var n=t+w.features[r].properties.winding;w.features[r].properties.netWinding=n,K(r,n)}}return w=o.featureCollection(g),z(),H(),w}var d=function(e,t,r,n,o){this.coord=e,this.param=t,this.ringAndEdgeIn=r,this.ringAndEdgeOut=n,this.nxtIsectAlongEdgeIn=o},m=function(e,t,r,n,o,i,a){this.coord=e,this.ringAndEdge1=t,this.ringAndEdge2=r,this.nxtIsectAlongRingAndEdge1=n,this.nxtIsectAlongRingAndEdge2=o,this.ringAndEdge1Walkable=i,this.ringAndEdge2Walkable=a};function p(e,t){if(void 0===t&&(t=!0),3!=e.length)throw new Error("This function requires an array of three points [x,y]");return(e[1][0]-e[0][0])*(e[2][1]-e[0][1])-(e[1][1]-e[0][1])*(e[2][0]-e[0][0])>=0==t}function y(e){for(var t=0,r=0;r<e.length-1;r++)e[r][0]<e[t][0]&&(t=r);if(p([e[b(t-1,e.length-1)],e[t],e[b(t+1,e.length-1)]],!0))var n=1;else n=-1;return n}function v(e,t){if(!e||!t)return!1;if(e.length!=t.length)return!1;for(var r=0,n=e.length;r<n;r++)if(e[r]instanceof Array&&t[r]instanceof Array){if(!v(e[r],t[r]))return!1}else if(e[r]!=t[r])return!1;return!0}function b(e,t){return(e%t+t)%t}function w(e){var t=[];return n.flattenEach(e,(function(e){"Polygon"===e.geometry.type&&n.featureEach(g(e),(function(r){t.push(o.polygon(r.geometry.coordinates,e.properties))}))})),o.featureCollection(t)}e.exports=w,e.exports.default=w},639:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(193);t.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},t.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},t.containsNumber=function e(t){if(t.length>1&&n.isNumber(t[0])&&n.isNumber(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return e(t[0]);throw new Error("coordinates must only contain numbers")},t.geojsonType=function(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)},t.featureOf=function(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)},t.collectionOf=function(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!i.geometry||i.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+i.geometry.type)}},t.getGeom=function(e){return"Feature"===e.type?e.geometry:e},t.getType=function(e,t){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}},672:(e,t,r)=>{const n=r(38);e.exports=(e,t)=>{let r,o=t;return void 0===o&&(o={unkink:!0}),void 0===o.unkink&&(o.unkink=!0),r=void 0!==o.features?((e,{features:t,unkink:r})=>{let o;o=r?n.unkinkPolygon(t):t;const i=e||10,a=[],u=n.bbox(o);let l=i,s=!1,c=0;for(;!s;){const e=n.randomPoint(l,{bbox:u});c+=1;const t=n.pointsWithinPolygon(e,o);for(let e=0;e<t.features.length;e+=1)a.push(t.features[e]);if(a.length<i?l=i-a.length:s=!0,c>1e4*i)throw new Error("Your are not lucky. Ending without reaching expected number of Points with input polygon(s)")}return n.featureCollection(a)})(e,o):((e,t)=>{const r=e||10;return n.randomPoint(r,{bbox:t})})(e,o.bbox),r}},720:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(356);function o(e,t,r){if(null!==e)for(var n,i,a,u,l,s,c,f,h=0,g=0,d=e.type,m="FeatureCollection"===d,p="Feature"===d,y=m?e.features.length:1,v=0;v<y;v++){l=(f=!!(c=m?e.features[v].geometry:p?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var b=0;b<l;b++){var w=0,x=0;if(null!==(u=f?c.geometries[b]:c)){s=u.coordinates;var E=u.type;switch(h=!r||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===t(s,g,v,w,x))return!1;g++,w++;break;case"LineString":case"MultiPoint":for(n=0;n<s.length;n++){if(!1===t(s[n],g,v,w,x))return!1;g++,"MultiPoint"===E&&w++}"LineString"===E&&w++;break;case"Polygon":case"MultiLineString":for(n=0;n<s.length;n++){for(i=0;i<s[n].length-h;i++){if(!1===t(s[n][i],g,v,w,x))return!1;g++}"MultiLineString"===E&&w++,"Polygon"===E&&x++}"Polygon"===E&&w++;break;case"MultiPolygon":for(n=0;n<s.length;n++){for(x=0,i=0;i<s[n].length;i++){for(a=0;a<s[n][i].length-h;a++){if(!1===t(s[n][i][a],g,v,w,x))return!1;g++}x++}w++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===o(u.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function u(e,t){var r,n,o,i,a,u,l,s,c,f,h=0,g="FeatureCollection"===e.type,d="Feature"===e.type,m=g?e.features.length:1;for(r=0;r<m;r++){for(u=g?e.features[r].geometry:d?e.geometry:e,s=g?e.features[r].properties:d?e.properties:{},c=g?e.features[r].bbox:d?e.bbox:void 0,f=g?e.features[r].id:d?e.id:void 0,a=(l=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,o=0;o<a;o++)if(null!==(i=l?u.geometries[o]:u))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,h,s,c,f))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],h,s,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,h,s,c,f))return!1;h++}}function l(e,t){u(e,(function(e,r,o,i,a){var u,l=null===e?null:e.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==t(n.feature.call(void 0,e,o,{bbox:i,id:a}),r,0)&&void 0}switch(l){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var s=0;s<e.coordinates.length;s++){var c={type:u,coordinates:e.coordinates[s]};if(!1===t(n.feature.call(void 0,c,o),r,s))return!1}}))}function s(e,t){l(e,(function(e,r,i){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var l,s=0,c=0,f=0;return!1!==o(e,(function(o,u,h,g,d){if(void 0===l||r>s||g>c||d>f)return l=o,s=r,c=g,f=d,void(a=0);var m=n.lineString.call(void 0,[l,o],e.properties);if(!1===t(m,r,i,d,a))return!1;a++,l=o}))&&void 0}}}))}function c(e,t){if(!e)throw new Error("geojson is required");l(e,(function(e,r,o){if(null!==e.geometry){var i=e.geometry.type,a=e.geometry.coordinates;switch(i){case"LineString":if(!1===t(e,r,o,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===t(n.lineString.call(void 0,a[u],e.properties),r,o,u))return!1}}}))}t.coordAll=function(e){var t=[];return o(e,(function(e){t.push(e)})),t},t.coordEach=o,t.coordReduce=function(e,t,r,n){var i=r;return o(e,(function(e,n,o,a,u){i=0===n&&void 0===r?e:t(i,e,n,o,a,u)}),n),i},t.featureEach=a,t.featureReduce=function(e,t,r){var n=r;return a(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.findPoint=function(e,t){if(t=t||{},!n.isObject.call(void 0,t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.coordIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":return n.point.call(void 0,s,l,t);case"MultiPoint":return i<0&&(i=s.length+i),n.point.call(void 0,s[i],l,t);case"LineString":return u<0&&(u=s.length+u),n.point.call(void 0,s[u],l,t);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u),n.point.call(void 0,s[a][u],l,t);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u),n.point.call(void 0,s[i][u],l,t);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u),n.point.call(void 0,s[i][a][u],l,t)}throw new Error("geojson is invalid")},t.findSegment=function(e,t){if(t=t||{},!n.isObject.call(void 0,t))throw new Error("options is invalid");var r,o=t.featureIndex||0,i=t.multiFeatureIndex||0,a=t.geometryIndex||0,u=t.segmentIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),l=l||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var s=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=s.length+u-1),n.lineString.call(void 0,[s[u],s[u+1]],l,t);case"Polygon":return a<0&&(a=s.length+a),u<0&&(u=s[a].length+u-1),n.lineString.call(void 0,[s[a][u],s[a][u+1]],l,t);case"MultiLineString":return i<0&&(i=s.length+i),u<0&&(u=s[i].length+u-1),n.lineString.call(void 0,[s[i][u],s[i][u+1]],l,t);case"MultiPolygon":return i<0&&(i=s.length+i),a<0&&(a=s[i].length+a),u<0&&(u=s[i][a].length-u-1),n.lineString.call(void 0,[s[i][a][u],s[i][a][u+1]],l,t)}throw new Error("geojson is invalid")},t.flattenEach=l,t.flattenReduce=function(e,t,r){var n=r;return l(e,(function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)})),n},t.geomEach=u,t.geomReduce=function(e,t,r){var n=r;return u(e,(function(e,o,i,a,u){n=0===o&&void 0===r?e:t(n,e,o,i,a,u)})),n},t.lineEach=c,t.lineReduce=function(e,t,r){var n=r;return c(e,(function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)})),n},t.propEach=i,t.propReduce=function(e,t,r){var n=r;return i(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n},t.segmentEach=s,t.segmentReduce=function(e,t,r){var n=r,o=!1;return s(e,(function(e,i,a,u,l){n=!1===o&&void 0===r?e:t(n,e,i,a,u,l),o=!0})),n}},941:(e,t,r)=>{"use strict";e.exports=o,e.exports.default=o;var n=r(957);function o(e,t){if(!(this instanceof o))return new o(e,t);this._maxEntries=Math.max(4,e||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),t&&this._initFormat(t),this.clear()}function i(e,t,r){if(!r)return t.indexOf(e);for(var n=0;n<t.length;n++)if(r(e,t[n]))return n;return-1}function a(e,t){u(e,0,e.children.length,t,e)}function u(e,t,r,n,o){o||(o=m(null)),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(var i,a=t;a<r;a++)i=e.children[a],l(o,e.leaf?n(i):i);return o}function l(e,t){return e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY),e}function s(e,t){return e.minX-t.minX}function c(e,t){return e.minY-t.minY}function f(e){return(e.maxX-e.minX)*(e.maxY-e.minY)}function h(e){return e.maxX-e.minX+(e.maxY-e.minY)}function g(e,t){return e.minX<=t.minX&&e.minY<=t.minY&&t.maxX<=e.maxX&&t.maxY<=e.maxY}function d(e,t){return t.minX<=e.maxX&&t.minY<=e.maxY&&t.maxX>=e.minX&&t.maxY>=e.minY}function m(e){return{children:e,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function p(e,t,r,o,i){for(var a,u=[t,r];u.length;)(r=u.pop())-(t=u.pop())<=o||(a=t+Math.ceil((r-t)/o/2)*o,n(e,a,t,r,i),u.push(t,a,a,r))}o.prototype={all:function(){return this._all(this.data,[])},search:function(e){var t=this.data,r=[],n=this.toBBox;if(!d(e,t))return r;for(var o,i,a,u,l=[];t;){for(o=0,i=t.children.length;o<i;o++)a=t.children[o],d(e,u=t.leaf?n(a):a)&&(t.leaf?r.push(a):g(e,u)?this._all(a,r):l.push(a));t=l.pop()}return r},collides:function(e){var t=this.data,r=this.toBBox;if(!d(e,t))return!1;for(var n,o,i,a,u=[];t;){for(n=0,o=t.children.length;n<o;n++)if(i=t.children[n],d(e,a=t.leaf?r(i):i)){if(t.leaf||g(e,a))return!0;u.push(i)}t=u.pop()}return!1},load:function(e){if(!e||!e.length)return this;if(e.length<this._minEntries){for(var t=0,r=e.length;t<r;t++)this.insert(e[t]);return this}var n=this._build(e.slice(),0,e.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var o=this.data;this.data=n,n=o}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(e){return e&&this._insert(e,this.data.height-1),this},clear:function(){return this.data=m([]),this},remove:function(e,t){if(!e)return this;for(var r,n,o,a,u=this.data,l=this.toBBox(e),s=[],c=[];u||s.length;){if(u||(u=s.pop(),n=s[s.length-1],r=c.pop(),a=!0),u.leaf&&-1!==(o=i(e,u.children,t)))return u.children.splice(o,1),s.push(u),this._condense(s),this;a||u.leaf||!g(u,l)?n?(r++,u=n.children[r],a=!1):u=null:(s.push(u),c.push(r),r=0,n=u,u=u.children[0])}return this},toBBox:function(e){return e},compareMinX:s,compareMinY:c,toJSON:function(){return this.data},fromJSON:function(e){return this.data=e,this},_all:function(e,t){for(var r=[];e;)e.leaf?t.push.apply(t,e.children):r.push.apply(r,e.children),e=r.pop();return t},_build:function(e,t,r,n){var o,i=r-t+1,u=this._maxEntries;if(i<=u)return a(o=m(e.slice(t,r+1)),this.toBBox),o;n||(n=Math.ceil(Math.log(i)/Math.log(u)),u=Math.ceil(i/Math.pow(u,n-1))),(o=m([])).leaf=!1,o.height=n;var l,s,c,f,h=Math.ceil(i/u),g=h*Math.ceil(Math.sqrt(u));for(p(e,t,r,g,this.compareMinX),l=t;l<=r;l+=g)for(p(e,l,c=Math.min(l+g-1,r),h,this.compareMinY),s=l;s<=c;s+=h)f=Math.min(s+h-1,c),o.children.push(this._build(e,s,f,n-1));return a(o,this.toBBox),o},_chooseSubtree:function(e,t,r,n){for(var o,i,a,u,l,s,c,h,g,d;n.push(t),!t.leaf&&n.length-1!==r;){for(c=h=1/0,o=0,i=t.children.length;o<i;o++)l=f(a=t.children[o]),g=e,d=a,(s=(Math.max(d.maxX,g.maxX)-Math.min(d.minX,g.minX))*(Math.max(d.maxY,g.maxY)-Math.min(d.minY,g.minY))-l)<h?(h=s,c=l<c?l:c,u=a):s===h&&l<c&&(c=l,u=a);t=u||t.children[0]}return t},_insert:function(e,t,r){var n=this.toBBox,o=r?e:n(e),i=[],a=this._chooseSubtree(o,this.data,t,i);for(a.children.push(e),l(a,o);t>=0&&i[t].children.length>this._maxEntries;)this._split(i,t),t--;this._adjustParentBBoxes(o,i,t)},_split:function(e,t){var r=e[t],n=r.children.length,o=this._minEntries;this._chooseSplitAxis(r,o,n);var i=this._chooseSplitIndex(r,o,n),u=m(r.children.splice(i,r.children.length-i));u.height=r.height,u.leaf=r.leaf,a(r,this.toBBox),a(u,this.toBBox),t?e[t-1].children.push(u):this._splitRoot(r,u)},_splitRoot:function(e,t){this.data=m([e,t]),this.data.height=e.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},_chooseSplitIndex:function(e,t,r){var n,o,i,a,l,s,c,h,g,d,m,p,y,v;for(s=c=1/0,n=t;n<=r-t;n++)g=o=u(e,0,n,this.toBBox),d=i=u(e,n,r,this.toBBox),void 0,void 0,void 0,void 0,m=Math.max(g.minX,d.minX),p=Math.max(g.minY,d.minY),y=Math.min(g.maxX,d.maxX),v=Math.min(g.maxY,d.maxY),a=Math.max(0,y-m)*Math.max(0,v-p),l=f(o)+f(i),a<s?(s=a,h=n,c=l<c?l:c):a===s&&l<c&&(c=l,h=n);return h},_chooseSplitAxis:function(e,t,r){var n=e.leaf?this.compareMinX:s,o=e.leaf?this.compareMinY:c;this._allDistMargin(e,t,r,n)<this._allDistMargin(e,t,r,o)&&e.children.sort(n)},_allDistMargin:function(e,t,r,n){e.children.sort(n);var o,i,a=this.toBBox,s=u(e,0,t,a),c=u(e,r-t,r,a),f=h(s)+h(c);for(o=t;o<r-t;o++)i=e.children[o],l(s,e.leaf?a(i):i),f+=h(s);for(o=r-t-1;o>=t;o--)i=e.children[o],l(c,e.leaf?a(i):i),f+=h(c);return f},_adjustParentBBoxes:function(e,t,r){for(var n=r;n>=0;n--)l(t[n],e)},_condense:function(e){for(var t,r=e.length-1;r>=0;r--)0===e[r].children.length?r>0?(t=e[r-1].children).splice(t.indexOf(e[r]),1):this.clear():a(e[r],this.toBBox)},_initFormat:function(e){var t=["return a"," - b",";"];this.compareMinX=new Function("a","b",t.join(e[0])),this.compareMinY=new Function("a","b",t.join(e[1])),this.toBBox=new Function("a","return {minX: a"+e[0]+", minY: a"+e[1]+", maxX: a"+e[2]+", maxY: a"+e[3]+"};")}}},955:(e,t,r)=>{"use strict";var n=r(81),o=r(193),i=r(533);function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=a(n);function l(e,t){var r=[];return i.featureEach(e,(function(e){var n=!1;if("Point"===e.geometry.type)i.geomEach(t,(function(t){u.default(e,t)&&(n=!0)})),n&&r.push(e);else{if("MultiPoint"!==e.geometry.type)throw new Error("Input geometry must be a Point or MultiPoint");var a=[];i.geomEach(t,(function(t){i.coordEach(e,(function(e){u.default(e,t)&&(n=!0,a.push(e))}))})),n&&r.push(o.multiPoint(a))}})),o.featureCollection(r)}e.exports=l,e.exports.default=l},957:function(e){e.exports=function(){"use strict";function e(r,n,o,i,a){for(;i>o;){if(i-o>600){var u=i-o+1,l=n-o+1,s=Math.log(u),c=.5*Math.exp(2*s/3),f=.5*Math.sqrt(s*c*(u-c)/u)*(l-u/2<0?-1:1);e(r,n,Math.max(o,Math.floor(n-l*c/u+f)),Math.min(i,Math.floor(n+(u-l)*c/u+f)),a)}var h=r[n],g=o,d=i;for(t(r,o,n),a(r[i],h)>0&&t(r,o,i);g<d;){for(t(r,g,d),g++,d--;a(r[g],h)<0;)g++;for(;a(r[d],h)>0;)d--}0===a(r[o],h)?t(r,o,d):t(r,++d,i),d<=n&&(o=d+1),n<=d&&(i=d-1)}}function t(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function r(e,t){return e<t?-1:e>t?1:0}return function(t,n,o,i,a){e(t,n,o||0,i||t.length-1,a||r)}}()}},t={},function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}(237);var e,t}));
//# sourceMappingURL=random-points.min.js.map
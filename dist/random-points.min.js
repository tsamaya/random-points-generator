!function(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.geotools=r():e.geotools=r()}(self,(()=>{return e={10:(e,r,t)=>{const n=t(499);e.exports={random:n}},499:(e,r,t)=>{const n=t(122);e.exports=(e,r)=>{let t,i=r;return void 0===i&&(i={}),t=void 0!==i.features?((e,r)=>{const t=n.unkinkPolygon(r),i=e||10,o=[],a=n.bbox(t);let u=i,s=!1,l=0;for(;!s;){const e=n.randomPoint(u,{bbox:a});l+=1;const r=n.pointsWithinPolygon(e,t);for(let e=0;e<r.features.length;e+=1)o.push(r.features[e]);if(o.length<i?u=i-o.length:s=!0,l>100*i)throw new Error("Your are not lucky. Ending without reaching expected number of Points with input polygon(s)")}return n.featureCollection(o)})(e,i.features):((e,r)=>{const t=e||10;return n.randomPoint(t,{bbox:r})})(e,i.bbox),t}},122:(e,r,t)=>{const n=t(404),i=t(295),o=t(705),a=t(187),u=t(102);e.exports={randomPoint:i.randomPoint,unkinkPolygon:n,bbox:o.default,pointsWithinPolygon:a,featureCollection:u.featureCollection}},70:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(449),i=6378137;function o(e){var r=0;if(e&&e.length>0){r+=Math.abs(a(e[0]));for(var t=1;t<e.length;t++)r-=Math.abs(a(e[t]))}return r}function a(e){var r,t,n,o,a,s,l=0,c=e.length;if(c>2){for(s=0;s<c;s++)s===c-2?(n=c-2,o=c-1,a=0):s===c-1?(n=c-1,o=0,a=1):(n=s,o=s+1,a=s+2),r=e[n],t=e[o],l+=(u(e[a][0])-u(r[0]))*Math.sin(u(t[1]));l=l*i*i/2}return l}function u(e){return e*Math.PI/180}r.default=function(e){return n.geomReduce(e,(function(e,r){return e+function(e){var r,t=0;switch(e.type){case"Polygon":return o(e.coordinates);case"MultiPolygon":for(r=0;r<e.coordinates.length;r++)t+=o(e.coordinates[r]);return t;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}(r)}),0)}},231:(e,r)=>{"use strict";function t(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function n(e,r,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(e[0])||!d(e[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:e},r,n)}function i(e,r,n){void 0===n&&(n={});for(var i=0,o=e;i<o.length;i++){var a=o[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:e},r,n)}function o(e,r,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:e},r,n)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function u(e,r,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:e},r,n)}function s(e,r,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:e},r,n)}function l(e,r,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:e},r,n)}function c(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function f(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function g(e){return e%(2*Math.PI)*180/Math.PI}function d(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:1.0936*r.earthRadius},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1.0936133},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=t,r.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return n(r).geometry;case"LineString":return o(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return s(r).geometry;case"MultiLineString":return u(r).geometry;case"MultiPolygon":return l(r).geometry;default:throw new Error(e+" is invalid")}},r.point=n,r.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return n(e,r)})),t)},r.polygon=i,r.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},r.lineString=o,r.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},r.featureCollection=a,r.multiLineString=u,r.multiPoint=s,r.multiPolygon=l,r.geometryCollection=function(e,r,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:e},r,n)},r.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},r.radiansToLength=c,r.lengthToRadians=f,r.lengthToDegrees=function(e,r){return g(f(e,r))},r.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},r.radiansToDegrees=g,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,r),t)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var i=r.areaFactors[t];if(!i)throw new Error("invalid original units");var o=r.areaFactors[n];if(!o)throw new Error("invalid final units");return e/i*o},r.isNumber=d,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!d(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},449:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(231);function i(e,r,t){if(null!==e)for(var n,o,a,u,s,l,c,f,g=0,d=0,h=e.type,m="FeatureCollection"===h,y="Feature"===h,v=m?e.features.length:1,p=0;p<v;p++){s=(f=!!(c=m?e.features[p].geometry:y?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var w=0;w<s;w++){var b=0,P=0;if(null!==(u=f?c.geometries[w]:c)){l=u.coordinates;var E=u.type;switch(g=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===r(l,d,p,b,P))return!1;d++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===r(l[n],d,p,b,P))return!1;d++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(o=0;o<l[n].length-g;o++){if(!1===r(l[n][o],d,p,b,P))return!1;d++}"MultiLineString"===E&&b++,"Polygon"===E&&P++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,o=0;o<l[n].length;o++){for(a=0;a<l[n][o].length-g;a++){if(!1===r(l[n][o][a],d,p,b,P))return!1;d++}P++}b++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===i(u.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function o(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function a(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function u(e,r){var t,n,i,o,a,u,s,l,c,f,g=0,d="FeatureCollection"===e.type,h="Feature"===e.type,m=d?e.features.length:1;for(t=0;t<m;t++){for(u=d?e.features[t].geometry:h?e.geometry:e,l=d?e.features[t].properties:h?e.properties:{},c=d?e.features[t].bbox:h?e.bbox:void 0,f=d?e.features[t].id:h?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,i=0;i<a;i++)if(null!==(o=s?u.geometries[i]:u))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(o,g,l,c,f))return!1;break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)if(!1===r(o.geometries[n],g,l,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,g,l,c,f))return!1;g++}}function s(e,r){u(e,(function(e,t,i,o,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n.feature(e,i,{bbox:o,id:a}),t,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var l=0;l<e.coordinates.length;l++){var c={type:u,coordinates:e.coordinates[l]};if(!1===r(n.feature(c,i),t,l))return!1}}))}function l(e,r){s(e,(function(e,t,o){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,l=0,c=0,f=0;return!1!==i(e,(function(i,u,g,d,h){if(void 0===s||t>l||d>c||h>f)return s=i,l=t,c=d,f=h,void(a=0);var m=n.lineString([s,i],e.properties);if(!1===r(m,t,o,h,a))return!1;a++,s=i}))&&void 0}}}))}function c(e,r){if(!e)throw new Error("geojson is required");s(e,(function(e,t,i){if(null!==e.geometry){var o=e.geometry.type,a=e.geometry.coordinates;switch(o){case"LineString":if(!1===r(e,t,i,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===r(n.lineString(a[u],e.properties),t,i,u))return!1}}}))}r.coordAll=function(e){var r=[];return i(e,(function(e){r.push(e)})),r},r.coordEach=i,r.coordReduce=function(e,r,t,n){var o=t;return i(e,(function(e,n,i,a,u){o=0===n&&void 0===t?e:r(o,e,n,i,a,u)}),n),o},r.featureEach=a,r.featureReduce=function(e,r,t){var n=t;return a(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.findPoint=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.coordIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":return n.point(l,s,r);case"MultiPoint":return o<0&&(o=l.length+o),n.point(l[o],s,r);case"LineString":return u<0&&(u=l.length+u),n.point(l[u],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u),n.point(l[a][u],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u),n.point(l[o][u],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u),n.point(l[o][a][u],s,r)}throw new Error("geojson is invalid")},r.findSegment=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.segmentIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=l.length+u-1),n.lineString([l[u],l[u+1]],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u-1),n.lineString([l[a][u],l[a][u+1]],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u-1),n.lineString([l[o][u],l[o][u+1]],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u-1),n.lineString([l[o][a][u],l[o][a][u+1]],s,r)}throw new Error("geojson is invalid")},r.flattenEach=s,r.flattenReduce=function(e,r,t){var n=t;return s(e,(function(e,i,o){n=0===i&&0===o&&void 0===t?e:r(n,e,i,o)})),n},r.geomEach=u,r.geomReduce=function(e,r,t){var n=t;return u(e,(function(e,i,o,a,u){n=0===i&&void 0===t?e:r(n,e,i,o,a,u)})),n},r.lineEach=c,r.lineReduce=function(e,r,t){var n=t;return c(e,(function(e,i,o,a){n=0===i&&void 0===t?e:r(n,e,i,o,a)})),n},r.propEach=o,r.propReduce=function(e,r,t){var n=t;return o(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.segmentEach=l,r.segmentReduce=function(e,r,t){var n=t,i=!1;return l(e,(function(e,o,a,u,s){n=!1===i&&void 0===t?e:r(n,e,o,a,u,s),i=!0})),n}},705:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(410);function i(e){var r=[1/0,1/0,-1/0,-1/0];return n.coordEach(e,(function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}i.default=i,r.default=i},758:(e,r)=>{"use strict";function t(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function n(e,r,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(e[0])||!d(e[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:e},r,n)}function i(e,r,n){void 0===n&&(n={});for(var i=0,o=e;i<o.length;i++){var a=o[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:e},r,n)}function o(e,r,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:e},r,n)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function u(e,r,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:e},r,n)}function s(e,r,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:e},r,n)}function l(e,r,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:e},r,n)}function c(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function f(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function g(e){return e%(2*Math.PI)*180/Math.PI}function d(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:1.0936*r.earthRadius},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1.0936133},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=t,r.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return n(r).geometry;case"LineString":return o(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return s(r).geometry;case"MultiLineString":return u(r).geometry;case"MultiPolygon":return l(r).geometry;default:throw new Error(e+" is invalid")}},r.point=n,r.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return n(e,r)})),t)},r.polygon=i,r.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},r.lineString=o,r.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},r.featureCollection=a,r.multiLineString=u,r.multiPoint=s,r.multiPolygon=l,r.geometryCollection=function(e,r,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:e},r,n)},r.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},r.radiansToLength=c,r.lengthToRadians=f,r.lengthToDegrees=function(e,r){return g(f(e,r))},r.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},r.radiansToDegrees=g,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,r),t)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var i=r.areaFactors[t];if(!i)throw new Error("invalid original units");var o=r.areaFactors[n];if(!o)throw new Error("invalid final units");return e/i*o},r.isNumber=d,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!d(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},410:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(758);function i(e,r,t){if(null!==e)for(var n,o,a,u,s,l,c,f,g=0,d=0,h=e.type,m="FeatureCollection"===h,y="Feature"===h,v=m?e.features.length:1,p=0;p<v;p++){s=(f=!!(c=m?e.features[p].geometry:y?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var w=0;w<s;w++){var b=0,P=0;if(null!==(u=f?c.geometries[w]:c)){l=u.coordinates;var E=u.type;switch(g=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===r(l,d,p,b,P))return!1;d++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===r(l[n],d,p,b,P))return!1;d++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(o=0;o<l[n].length-g;o++){if(!1===r(l[n][o],d,p,b,P))return!1;d++}"MultiLineString"===E&&b++,"Polygon"===E&&P++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,o=0;o<l[n].length;o++){for(a=0;a<l[n][o].length-g;a++){if(!1===r(l[n][o][a],d,p,b,P))return!1;d++}P++}b++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===i(u.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function o(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function a(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function u(e,r){var t,n,i,o,a,u,s,l,c,f,g=0,d="FeatureCollection"===e.type,h="Feature"===e.type,m=d?e.features.length:1;for(t=0;t<m;t++){for(u=d?e.features[t].geometry:h?e.geometry:e,l=d?e.features[t].properties:h?e.properties:{},c=d?e.features[t].bbox:h?e.bbox:void 0,f=d?e.features[t].id:h?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,i=0;i<a;i++)if(null!==(o=s?u.geometries[i]:u))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(o,g,l,c,f))return!1;break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)if(!1===r(o.geometries[n],g,l,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,g,l,c,f))return!1;g++}}function s(e,r){u(e,(function(e,t,i,o,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n.feature(e,i,{bbox:o,id:a}),t,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var l=0;l<e.coordinates.length;l++){var c={type:u,coordinates:e.coordinates[l]};if(!1===r(n.feature(c,i),t,l))return!1}}))}function l(e,r){s(e,(function(e,t,o){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,l=0,c=0,f=0;return!1!==i(e,(function(i,u,g,d,h){if(void 0===s||t>l||d>c||h>f)return s=i,l=t,c=d,f=h,void(a=0);var m=n.lineString([s,i],e.properties);if(!1===r(m,t,o,h,a))return!1;a++,s=i}))&&void 0}}}))}function c(e,r){if(!e)throw new Error("geojson is required");s(e,(function(e,t,i){if(null!==e.geometry){var o=e.geometry.type,a=e.geometry.coordinates;switch(o){case"LineString":if(!1===r(e,t,i,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===r(n.lineString(a[u],e.properties),t,i,u))return!1}}}))}r.coordAll=function(e){var r=[];return i(e,(function(e){r.push(e)})),r},r.coordEach=i,r.coordReduce=function(e,r,t,n){var o=t;return i(e,(function(e,n,i,a,u){o=0===n&&void 0===t?e:r(o,e,n,i,a,u)}),n),o},r.featureEach=a,r.featureReduce=function(e,r,t){var n=t;return a(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.findPoint=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.coordIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":return n.point(l,s,r);case"MultiPoint":return o<0&&(o=l.length+o),n.point(l[o],s,r);case"LineString":return u<0&&(u=l.length+u),n.point(l[u],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u),n.point(l[a][u],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u),n.point(l[o][u],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u),n.point(l[o][a][u],s,r)}throw new Error("geojson is invalid")},r.findSegment=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.segmentIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=l.length+u-1),n.lineString([l[u],l[u+1]],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u-1),n.lineString([l[a][u],l[a][u+1]],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u-1),n.lineString([l[o][u],l[o][u+1]],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u-1),n.lineString([l[o][a][u],l[o][a][u+1]],s,r)}throw new Error("geojson is invalid")},r.flattenEach=s,r.flattenReduce=function(e,r,t){var n=t;return s(e,(function(e,i,o){n=0===i&&0===o&&void 0===t?e:r(n,e,i,o)})),n},r.geomEach=u,r.geomReduce=function(e,r,t){var n=t;return u(e,(function(e,i,o,a,u){n=0===i&&void 0===t?e:r(n,e,i,o,a,u)})),n},r.lineEach=c,r.lineReduce=function(e,r,t){var n=t;return c(e,(function(e,i,o,a){n=0===i&&void 0===t?e:r(n,e,i,o,a)})),n},r.propEach=o,r.propReduce=function(e,r,t){var n=t;return o(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.segmentEach=l,r.segmentReduce=function(e,r,t){var n=t,i=!1;return l(e,(function(e,o,a,u,s){n=!1===i&&void 0===t?e:r(n,e,o,a,u,s),i=!0})),n}},102:(e,r)=>{"use strict";function t(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function n(e,r,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(e[0])||!d(e[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:e},r,n)}function i(e,r,n){void 0===n&&(n={});for(var i=0,o=e;i<o.length;i++){var a=o[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:e},r,n)}function o(e,r,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:e},r,n)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function u(e,r,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:e},r,n)}function s(e,r,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:e},r,n)}function l(e,r,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:e},r,n)}function c(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function f(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function g(e){return e%(2*Math.PI)*180/Math.PI}function d(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:1.0936*r.earthRadius},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1.0936133},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=t,r.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return n(r).geometry;case"LineString":return o(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return s(r).geometry;case"MultiLineString":return u(r).geometry;case"MultiPolygon":return l(r).geometry;default:throw new Error(e+" is invalid")}},r.point=n,r.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return n(e,r)})),t)},r.polygon=i,r.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},r.lineString=o,r.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},r.featureCollection=a,r.multiLineString=u,r.multiPoint=s,r.multiPolygon=l,r.geometryCollection=function(e,r,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:e},r,n)},r.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},r.radiansToLength=c,r.lengthToRadians=f,r.lengthToDegrees=function(e,r){return g(f(e,r))},r.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},r.radiansToDegrees=g,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,r),t)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var i=r.areaFactors[t];if(!i)throw new Error("invalid original units");var o=r.areaFactors[n];if(!o)throw new Error("invalid final units");return e/i*o},r.isNumber=d,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!d(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},187:(e,r,t)=>{"use strict";var n=t(417),i=t(716),o=t(109);function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var u=a(n);function s(e,r){var t=[];return o.featureEach(e,(function(e){var n=!1;if("Point"===e.geometry.type)o.geomEach(r,(function(r){u.default(e,r)&&(n=!0)})),n&&t.push(e);else{if("MultiPoint"!==e.geometry.type)throw new Error("Input geometry must be a Point or MultiPoint");var a=[];o.geomEach(r,(function(r){o.coordEach(e,(function(e){u.default(e,r)&&(n=!0,a.push(e))}))})),n&&t.push(i.multiPoint(a))}})),i.featureCollection(t)}e.exports=s,e.exports.default=s},417:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(827);function i(e,r,t){var n=!1;r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]&&(r=r.slice(0,r.length-1));for(var i=0,o=r.length-1;i<r.length;o=i++){var a=r[i][0],u=r[i][1],s=r[o][0],l=r[o][1];if(e[1]*(a-s)+u*(s-e[0])+l*(e[0]-a)==0&&(a-e[0])*(s-e[0])<=0&&(u-e[1])*(l-e[1])<=0)return!t;u>e[1]!=l>e[1]&&e[0]<(s-a)*(e[1]-u)/(l-u)+a&&(n=!n)}return n}r.default=function(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");var o=n.getCoord(e),a=n.getGeom(r),u=a.type,s=r.bbox,l=a.coordinates;if(s&&!1===function(e,r){return r[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]}(o,s))return!1;"Polygon"===u&&(l=[l]);for(var c=!1,f=0;f<l.length&&!c;f++)if(i(o,l[f][0],t.ignoreBoundary)){for(var g=!1,d=1;d<l[f].length&&!g;)i(o,l[f][d],!t.ignoreBoundary)&&(g=!0),d++;g||(c=!0)}return c}},716:(e,r)=>{"use strict";function t(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function n(e,r,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(e[0])||!d(e[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:e},r,n)}function i(e,r,n){void 0===n&&(n={});for(var i=0,o=e;i<o.length;i++){var a=o[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:e},r,n)}function o(e,r,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:e},r,n)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function u(e,r,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:e},r,n)}function s(e,r,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:e},r,n)}function l(e,r,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:e},r,n)}function c(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function f(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function g(e){return e%(2*Math.PI)*180/Math.PI}function d(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:1.0936*r.earthRadius},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1.0936133},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=t,r.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return n(r).geometry;case"LineString":return o(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return s(r).geometry;case"MultiLineString":return u(r).geometry;case"MultiPolygon":return l(r).geometry;default:throw new Error(e+" is invalid")}},r.point=n,r.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return n(e,r)})),t)},r.polygon=i,r.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},r.lineString=o,r.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},r.featureCollection=a,r.multiLineString=u,r.multiPoint=s,r.multiPolygon=l,r.geometryCollection=function(e,r,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:e},r,n)},r.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},r.radiansToLength=c,r.lengthToRadians=f,r.lengthToDegrees=function(e,r){return g(f(e,r))},r.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},r.radiansToDegrees=g,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,r),t)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var i=r.areaFactors[t];if(!i)throw new Error("invalid original units");var o=r.areaFactors[n];if(!o)throw new Error("invalid final units");return e/i*o},r.isNumber=d,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!d(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},827:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(716);r.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},r.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},r.containsNumber=function e(r){if(r.length>1&&n.isNumber(r[0])&&n.isNumber(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")},r.geojsonType=function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)},r.featureOf=function(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)},r.collectionOf=function(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,i=e.features;n<i.length;n++){var o=i[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+o.geometry.type)}},r.getGeom=function(e){return"Feature"===e.type?e.geometry:e},r.getType=function(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}},109:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(716);function i(e,r,t){if(null!==e)for(var n,o,a,u,s,l,c,f,g=0,d=0,h=e.type,m="FeatureCollection"===h,y="Feature"===h,v=m?e.features.length:1,p=0;p<v;p++){s=(f=!!(c=m?e.features[p].geometry:y?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var w=0;w<s;w++){var b=0,P=0;if(null!==(u=f?c.geometries[w]:c)){l=u.coordinates;var E=u.type;switch(g=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===r(l,d,p,b,P))return!1;d++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===r(l[n],d,p,b,P))return!1;d++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(o=0;o<l[n].length-g;o++){if(!1===r(l[n][o],d,p,b,P))return!1;d++}"MultiLineString"===E&&b++,"Polygon"===E&&P++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,o=0;o<l[n].length;o++){for(a=0;a<l[n][o].length-g;a++){if(!1===r(l[n][o][a],d,p,b,P))return!1;d++}P++}b++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===i(u.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function o(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function a(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function u(e,r){var t,n,i,o,a,u,s,l,c,f,g=0,d="FeatureCollection"===e.type,h="Feature"===e.type,m=d?e.features.length:1;for(t=0;t<m;t++){for(u=d?e.features[t].geometry:h?e.geometry:e,l=d?e.features[t].properties:h?e.properties:{},c=d?e.features[t].bbox:h?e.bbox:void 0,f=d?e.features[t].id:h?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,i=0;i<a;i++)if(null!==(o=s?u.geometries[i]:u))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(o,g,l,c,f))return!1;break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)if(!1===r(o.geometries[n],g,l,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,g,l,c,f))return!1;g++}}function s(e,r){u(e,(function(e,t,i,o,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n.feature(e,i,{bbox:o,id:a}),t,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var l=0;l<e.coordinates.length;l++){var c={type:u,coordinates:e.coordinates[l]};if(!1===r(n.feature(c,i),t,l))return!1}}))}function l(e,r){s(e,(function(e,t,o){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,l=0,c=0,f=0;return!1!==i(e,(function(i,u,g,d,h){if(void 0===s||t>l||d>c||h>f)return s=i,l=t,c=d,f=h,void(a=0);var m=n.lineString([s,i],e.properties);if(!1===r(m,t,o,h,a))return!1;a++,s=i}))&&void 0}}}))}function c(e,r){if(!e)throw new Error("geojson is required");s(e,(function(e,t,i){if(null!==e.geometry){var o=e.geometry.type,a=e.geometry.coordinates;switch(o){case"LineString":if(!1===r(e,t,i,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===r(n.lineString(a[u],e.properties),t,i,u))return!1}}}))}r.coordAll=function(e){var r=[];return i(e,(function(e){r.push(e)})),r},r.coordEach=i,r.coordReduce=function(e,r,t,n){var o=t;return i(e,(function(e,n,i,a,u){o=0===n&&void 0===t?e:r(o,e,n,i,a,u)}),n),o},r.featureEach=a,r.featureReduce=function(e,r,t){var n=t;return a(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.findPoint=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.coordIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":return n.point(l,s,r);case"MultiPoint":return o<0&&(o=l.length+o),n.point(l[o],s,r);case"LineString":return u<0&&(u=l.length+u),n.point(l[u],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u),n.point(l[a][u],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u),n.point(l[o][u],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u),n.point(l[o][a][u],s,r)}throw new Error("geojson is invalid")},r.findSegment=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.segmentIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=l.length+u-1),n.lineString([l[u],l[u+1]],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u-1),n.lineString([l[a][u],l[a][u+1]],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u-1),n.lineString([l[o][u],l[o][u+1]],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u-1),n.lineString([l[o][a][u],l[o][a][u+1]],s,r)}throw new Error("geojson is invalid")},r.flattenEach=s,r.flattenReduce=function(e,r,t){var n=t;return s(e,(function(e,i,o){n=0===i&&0===o&&void 0===t?e:r(n,e,i,o)})),n},r.geomEach=u,r.geomReduce=function(e,r,t){var n=t;return u(e,(function(e,i,o,a,u){n=0===i&&void 0===t?e:r(n,e,i,o,a,u)})),n},r.lineEach=c,r.lineReduce=function(e,r,t){var n=t;return c(e,(function(e,i,o,a){n=0===i&&void 0===t?e:r(n,e,i,o,a)})),n},r.propEach=o,r.propReduce=function(e,r,t){var n=t;return o(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.segmentEach=l,r.segmentReduce=function(e,r,t){var n=t,i=!1;return l(e,(function(e,o,a,u,s){n=!1===i&&void 0===t?e:r(n,e,o,a,u,s),i=!0})),n}},295:function(e,r,t){"use strict";var n=this&&this.__spreadArrays||function(){for(var e=0,r=0,t=arguments.length;r<t;r++)e+=arguments[r].length;var n=Array(e),i=0;for(r=0;r<t;r++)for(var o=arguments[r],a=0,u=o.length;a<u;a++,i++)n[i]=o[a];return n};Object.defineProperty(r,"__esModule",{value:!0});var i=t(469);function o(e){return Array.isArray(e)?u(e):e&&e.bbox?u(e.bbox):[360*a(),180*a()]}function a(){return Math.random()-.5}function u(e){return[Math.random()*(e[2]-e[0])+e[0],Math.random()*(e[3]-e[1])+e[1]]}r.randomPosition=o,r.randomPoint=function(e,r){void 0===r&&(r={}),null==e&&(e=1);for(var t=[],n=0;n<e;n++)t.push(i.point(o(r.bbox)));return i.featureCollection(t)},r.randomPolygon=function(e,r){void 0===r&&(r={}),null==e&&(e=1),i.isNumber(r.num_vertices)&&void 0!==r.num_vertices||(r.num_vertices=10),i.isNumber(r.max_radial_length)&&void 0!==r.max_radial_length||(r.max_radial_length=10);for(var t=[],a=function(e){var a,u=[],s=n(Array(r.num_vertices+1)).map(Math.random);s.forEach((function(e,r,t){t[r]=r>0?e+t[r-1]:e})),s.forEach((function(e){e=2*e*Math.PI/s[s.length-1];var t=Math.random();u.push([t*(r.max_radial_length||10)*Math.sin(e),t*(r.max_radial_length||10)*Math.cos(e)])})),u[u.length-1]=u[0],u=u.map((a=o(r.bbox),function(e){return[e[0]+a[0],e[1]+a[1]]})),t.push(i.polygon([u]))},u=0;u<e;u++)a();return i.featureCollection(t)},r.randomLineString=function(e,r){if(void 0===r&&(r={}),r=r||{},!i.isObject(r))throw new Error("options is invalid");var t=r.bbox,n=r.num_vertices,a=r.max_length,u=r.max_rotation;null==e&&(e=1),(!i.isNumber(n)||void 0===n||n<2)&&(n=10),i.isNumber(a)&&void 0!==a||(a=1e-4),i.isNumber(u)&&void 0!==u||(u=Math.PI/8);for(var s=[],l=0;l<e;l++){for(var c=[o(t)],f=0;f<n-1;f++){var g=(0===f?2*Math.random()*Math.PI:Math.tan((c[f][1]-c[f-1][1])/(c[f][0]-c[f-1][0])))+(Math.random()-.5)*u*2,d=Math.random()*a;c.push([c[f][0]+d*Math.cos(g),c[f][1]+d*Math.sin(g)])}s.push(i.lineString(c))}return i.featureCollection(s)}},469:(e,r)=>{"use strict";function t(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function n(e,r,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(e[0])||!d(e[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:e},r,n)}function i(e,r,n){void 0===n&&(n={});for(var i=0,o=e;i<o.length;i++){var a=o[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:e},r,n)}function o(e,r,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:e},r,n)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function u(e,r,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:e},r,n)}function s(e,r,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:e},r,n)}function l(e,r,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:e},r,n)}function c(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function f(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function g(e){return e%(2*Math.PI)*180/Math.PI}function d(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:1.0936*r.earthRadius},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1.0936133},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=t,r.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return n(r).geometry;case"LineString":return o(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return s(r).geometry;case"MultiLineString":return u(r).geometry;case"MultiPolygon":return l(r).geometry;default:throw new Error(e+" is invalid")}},r.point=n,r.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return n(e,r)})),t)},r.polygon=i,r.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},r.lineString=o,r.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},r.featureCollection=a,r.multiLineString=u,r.multiPoint=s,r.multiPolygon=l,r.geometryCollection=function(e,r,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:e},r,n)},r.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},r.radiansToLength=c,r.lengthToRadians=f,r.lengthToDegrees=function(e,r){return g(f(e,r))},r.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},r.radiansToDegrees=g,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,r),t)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var i=r.areaFactors[t];if(!i)throw new Error("invalid original units");var o=r.areaFactors[n];if(!o)throw new Error("invalid final units");return e/i*o},r.isNumber=d,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!d(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},404:(e,r,t)=>{"use strict";var n=t(734),i=t(929),o=t(510),a=t(70),u=t(100);function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=s(o),c=s(a),f=s(u);function g(e,r){if(!e||!r)return!1;if(e.length!==r.length)return!1;for(var t=0,n=e.length;t<n;t++)if(e[t]instanceof Array&&r[t]instanceof Array){if(!g(e[t],r[t]))return!1}else if(e[t]!==r[t])return!1;return!0}function d(e){if("Feature"!=e.type)throw new Error("The input must a geojson object of type Feature");if(void 0===e.geometry||null==e.geometry)throw new Error("The input must a geojson object with a non-empty geometry");if("Polygon"!=e.geometry.type)throw new Error("The input must be a geojson Polygon");for(var r=e.geometry.coordinates.length,t=[],n=0;n<r;n++){var o=e.geometry.coordinates[n];p(o[0],o[o.length-1])||o.push(o[0]),t.push.apply(t,o.slice(0,o.length-1))}if(!function(e){for(var r={},t=1,n=0,i=e.length;n<i;++n){if(Object.prototype.hasOwnProperty.call(r,e[n])){t=0;break}r[e[n]]=1}return t}(t))throw new Error("The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)");var a=t.length,u=function(e,r,t){if("Polygon"!==e.geometry.type)throw new Error("The input feature must be a Polygon");void 0===t&&(t=1);var n=e.geometry.coordinates,i=[],o={};if(t){for(var a=[],u=0;u<n.length;u++)for(var s=0;s<n[u].length-1;s++)a.push(v(u,s));var c=l.default();c.load(a)}for(var f=0;f<n.length;f++)for(var d=0;d<n[f].length-1;d++)if(t)c.search(v(f,d)).forEach((function(e){var r=e.ring,t=e.edge;y(f,d,r,t)}));else for(var h=0;h<n.length;h++)for(var m=0;m<n[h].length-1;m++)y(f,d,h,m);return r||(i={type:"Feature",geometry:{type:"MultiPoint",coordinates:i}}),i;function y(e,t,a,u){var s,l,c=n[e][t],f=n[e][t+1],d=n[a][u],h=n[a][u+1],m=function(e,r,t,n){if(g(e,t)||g(e,n)||g(r,t)||g(n,t))return null;var i=e[0],o=e[1],a=r[0],u=r[1],s=t[0],l=t[1],c=n[0],f=n[1],d=(i-a)*(l-f)-(o-u)*(s-c);return 0===d?null:[((i*u-o*a)*(s-c)-(i-a)*(s*f-l*c))/d,((i*u-o*a)*(l-f)-(o-u)*(s*f-l*c))/d]}(c,f,d,h);if(null!==m&&(s=f[0]!==c[0]?(m[0]-c[0])/(f[0]-c[0]):(m[1]-c[1])/(f[1]-c[1]),l=h[0]!==d[0]?(m[0]-d[0])/(h[0]-d[0]):(m[1]-d[1])/(h[1]-d[1]),!(s>=1||s<=0||l>=1||l<=0))){var y=m,v=!o[y];v&&(o[y]=!0),r?i.push(r(m,e,t,c,f,s,a,u,d,h,l,v)):i.push(m)}}function v(e,r){var t,i,o,a,u=n[e][r],s=n[e][r+1];return u[0]<s[0]?(t=u[0],i=s[0]):(t=s[0],i=u[0]),u[1]<s[1]?(o=u[1],a=s[1]):(o=s[1],a=u[1]),{minX:t,minY:o,maxX:i,maxY:a,ring:e,edge:r}}}(e,(function(e,r,t,n,i,o,a,u,s,l,c,f){return[e,r,t,n,i,o,a,u,s,l,c,f]})),s=u.length;if(0==s){var d=[];for(n=0;n<r;n++)d.push(i.polygon([e.geometry.coordinates[n]],{parent:-1,winding:v(e.geometry.coordinates[n])}));var b=i.featureCollection(d);return J(),H(),b}var P=[],E=[];for(n=0;n<r;n++){P.push([]);for(var x=0;x<e.geometry.coordinates[n].length-1;x++)P[n].push([new h(e.geometry.coordinates[n][w(x+1,e.geometry.coordinates[n].length-1)],1,[n,x],[n,w(x+1,e.geometry.coordinates[n].length-1)],void 0)]),E.push(new m(e.geometry.coordinates[n][x],[n,w(x-1,e.geometry.coordinates[n].length-1)],[n,x],void 0,void 0,!1,!0))}for(n=0;n<s;n++)P[u[n][1]][u[n][2]].push(new h(u[n][0],u[n][5],[u[n][1],u[n][2]],[u[n][6],u[n][7]],void 0)),u[n][11]&&E.push(new m(u[n][0],[u[n][1],u[n][2]],[u[n][6],u[n][7]],void 0,void 0,!0,!0));var M=E.length;for(n=0;n<P.length;n++)for(x=0;x<P[n].length;x++)P[n][x].sort((function(e,r){return e.param<r.param?-1:1}));var k=[];for(n=0;n<M;n++)k.push({minX:E[n].coord[0],minY:E[n].coord[1],maxX:E[n].coord[0],maxY:E[n].coord[1],index:n});var A=l.default();for(A.load(k),n=0;n<P.length;n++)for(x=0;x<P[n].length;x++)for(var R=0;R<P[n][x].length;R++){F=R==P[n][x].length-1?P[n][w(x+1,e.geometry.coordinates[n].length-1)][0].coord:P[n][x][R+1].coord;var S=A.search({minX:F[0],minY:F[1],maxX:F[0],maxY:F[1]})[0];P[n][x][R].nxtIsectAlongEdgeIn=S.index}for(n=0;n<P.length;n++)for(x=0;x<P[n].length;x++)for(R=0;R<P[n][x].length;R++){var F=P[n][x][R].coord,L=(S=A.search({minX:F[0],minY:F[1],maxX:F[0],maxY:F[1]})[0]).index;L<a?E[L].nxtIsectAlongRingAndEdge2=P[n][x][R].nxtIsectAlongEdgeIn:p(E[L].ringAndEdge1,P[n][x][R].ringAndEdgeIn)?E[L].nxtIsectAlongRingAndEdge1=P[n][x][R].nxtIsectAlongEdgeIn:E[L].nxtIsectAlongRingAndEdge2=P[n][x][R].nxtIsectAlongEdgeIn}var I=[];for(n=0,x=0;x<r;x++){var C=n;for(R=0;R<e.geometry.coordinates[x].length-1;R++)E[n].coord[0]<E[C].coord[0]&&(C=n),n++;var _=E[C].nxtIsectAlongRingAndEdge2;for(R=0;R<E.length;R++)if(E[R].nxtIsectAlongRingAndEdge1==C||E[R].nxtIsectAlongRingAndEdge2==C){var j=R;break}var O=y([E[j].coord,E[C].coord,E[_].coord],!0)?1:-1;I.push({isect:C,parent:-1,winding:O})}for(I.sort((function(e,r){return E[e.isect].coord>E[r.isect].coord?-1:1})),d=[];I.length>0;){var T=I.pop(),B=T.isect,q=T.parent,Y=T.winding,X=d.length,G=[E[B].coord],N=B;if(E[B].ringAndEdge1Walkable)var D=E[B].ringAndEdge1,W=E[B].nxtIsectAlongRingAndEdge1;else D=E[B].ringAndEdge2,W=E[B].nxtIsectAlongRingAndEdge2;for(;!p(E[B].coord,E[W].coord);){G.push(E[W].coord);var U=void 0;for(n=0;n<I.length;n++)if(I[n].isect==W){U=n;break}if(null!=U&&I.splice(U,1),p(D,E[W].ringAndEdge1)){if(D=E[W].ringAndEdge2,E[W].ringAndEdge2Walkable=!1,E[W].ringAndEdge1Walkable){var z={isect:W};y([E[N].coord,E[W].coord,E[E[W].nxtIsectAlongRingAndEdge2].coord],1==Y)?(z.parent=q,z.winding=-Y):(z.parent=X,z.winding=Y),I.push(z)}N=W,W=E[W].nxtIsectAlongRingAndEdge2}else D=E[W].ringAndEdge1,E[W].ringAndEdge1Walkable=!1,E[W].ringAndEdge2Walkable&&(z={isect:W},y([E[N].coord,E[W].coord,E[E[W].nxtIsectAlongRingAndEdge1].coord],1==Y)?(z.parent=q,z.winding=-Y):(z.parent=X,z.winding=Y),I.push(z)),N=W,W=E[W].nxtIsectAlongRingAndEdge1}G.push(E[W].coord),d.push(i.polygon([G],{index:X,parent:q,winding:Y,netWinding:void 0}))}function J(){for(var e=[],r=0;r<b.features.length;r++)-1==b.features[r].properties.parent&&e.push(r);if(e.length>1)for(r=0;r<e.length;r++){for(var t=-1,n=0;n<b.features.length;n++)e[r]!=n&&f.default(b.features[e[r]].geometry.coordinates[0][0],b.features[n],{ignoreBoundary:!0})&&c.default(b.features[n])<1/0&&(t=n);b.features[e[r]].properties.parent=t}}function H(){for(var e=0;e<b.features.length;e++)if(-1==b.features[e].properties.parent){var r=b.features[e].properties.winding;b.features[e].properties.netWinding=r,K(e,r)}}function K(e,r){for(var t=0;t<b.features.length;t++)if(b.features[t].properties.parent==e){var n=r+b.features[t].properties.winding;b.features[t].properties.netWinding=n,K(t,n)}}return b=i.featureCollection(d),J(),H(),b}var h=function(e,r,t,n,i){this.coord=e,this.param=r,this.ringAndEdgeIn=t,this.ringAndEdgeOut=n,this.nxtIsectAlongEdgeIn=i},m=function(e,r,t,n,i,o,a){this.coord=e,this.ringAndEdge1=r,this.ringAndEdge2=t,this.nxtIsectAlongRingAndEdge1=n,this.nxtIsectAlongRingAndEdge2=i,this.ringAndEdge1Walkable=o,this.ringAndEdge2Walkable=a};function y(e,r){if(void 0===r&&(r=!0),3!=e.length)throw new Error("This function requires an array of three points [x,y]");return(e[1][0]-e[0][0])*(e[2][1]-e[0][1])-(e[1][1]-e[0][1])*(e[2][0]-e[0][0])>=0==r}function v(e){for(var r=0,t=0;t<e.length-1;t++)e[t][0]<e[r][0]&&(r=t);if(y([e[w(r-1,e.length-1)],e[r],e[w(r+1,e.length-1)]],!0))var n=1;else n=-1;return n}function p(e,r){if(!e||!r)return!1;if(e.length!=r.length)return!1;for(var t=0,n=e.length;t<n;t++)if(e[t]instanceof Array&&r[t]instanceof Array){if(!p(e[t],r[t]))return!1}else if(e[t]!=r[t])return!1;return!0}function w(e,r){return(e%r+r)%r}function b(e){var r=[];return n.flattenEach(e,(function(e){"Polygon"===e.geometry.type&&n.featureEach(d(e),(function(t){r.push(i.polygon(t.geometry.coordinates,e.properties))}))})),i.featureCollection(r)}e.exports=b,e.exports.default=b},100:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(161);function i(e,r,t){var n=!1;r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]&&(r=r.slice(0,r.length-1));for(var i=0,o=r.length-1;i<r.length;o=i++){var a=r[i][0],u=r[i][1],s=r[o][0],l=r[o][1];if(e[1]*(a-s)+u*(s-e[0])+l*(e[0]-a)==0&&(a-e[0])*(s-e[0])<=0&&(u-e[1])*(l-e[1])<=0)return!t;u>e[1]!=l>e[1]&&e[0]<(s-a)*(e[1]-u)/(l-u)+a&&(n=!n)}return n}r.default=function(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");var o=n.getCoord(e),a=n.getGeom(r),u=a.type,s=r.bbox,l=a.coordinates;if(s&&!1===function(e,r){return r[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]}(o,s))return!1;"Polygon"===u&&(l=[l]);for(var c=!1,f=0;f<l.length&&!c;f++)if(i(o,l[f][0],t.ignoreBoundary)){for(var g=!1,d=1;d<l[f].length&&!g;)i(o,l[f][d],!t.ignoreBoundary)&&(g=!0),d++;g||(c=!0)}return c}},929:(e,r)=>{"use strict";function t(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function n(e,r,n){if(void 0===n&&(n={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!d(e[0])||!d(e[1]))throw new Error("coordinates must contain numbers");return t({type:"Point",coordinates:e},r,n)}function i(e,r,n){void 0===n&&(n={});for(var i=0,o=e;i<o.length;i++){var a=o[i];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return t({type:"Polygon",coordinates:e},r,n)}function o(e,r,n){if(void 0===n&&(n={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return t({type:"LineString",coordinates:e},r,n)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function u(e,r,n){return void 0===n&&(n={}),t({type:"MultiLineString",coordinates:e},r,n)}function s(e,r,n){return void 0===n&&(n={}),t({type:"MultiPoint",coordinates:e},r,n)}function l(e,r,n){return void 0===n&&(n={}),t({type:"MultiPolygon",coordinates:e},r,n)}function c(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e*n}function f(e,t){void 0===t&&(t="kilometers");var n=r.factors[t];if(!n)throw new Error(t+" units is invalid");return e/n}function g(e){return e%(2*Math.PI)*180/Math.PI}function d(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(r,"__esModule",{value:!0}),r.earthRadius=6371008.8,r.factors={centimeters:100*r.earthRadius,centimetres:100*r.earthRadius,degrees:r.earthRadius/111325,feet:3.28084*r.earthRadius,inches:39.37*r.earthRadius,kilometers:r.earthRadius/1e3,kilometres:r.earthRadius/1e3,meters:r.earthRadius,metres:r.earthRadius,miles:r.earthRadius/1609.344,millimeters:1e3*r.earthRadius,millimetres:1e3*r.earthRadius,nauticalmiles:r.earthRadius/1852,radians:1,yards:1.0936*r.earthRadius},r.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/r.earthRadius,yards:1.0936133},r.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},r.feature=t,r.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return n(r).geometry;case"LineString":return o(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return s(r).geometry;case"MultiLineString":return u(r).geometry;case"MultiPolygon":return l(r).geometry;default:throw new Error(e+" is invalid")}},r.point=n,r.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return n(e,r)})),t)},r.polygon=i,r.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},r.lineString=o,r.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},r.featureCollection=a,r.multiLineString=u,r.multiPoint=s,r.multiPolygon=l,r.geometryCollection=function(e,r,n){return void 0===n&&(n={}),t({type:"GeometryCollection",geometries:e},r,n)},r.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},r.radiansToLength=c,r.lengthToRadians=f,r.lengthToDegrees=function(e,r){return g(f(e,r))},r.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},r.radiansToDegrees=g,r.degreesToRadians=function(e){return e%360*Math.PI/180},r.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(f(e,r),t)},r.convertArea=function(e,t,n){if(void 0===t&&(t="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var i=r.areaFactors[t];if(!i)throw new Error("invalid original units");var o=r.areaFactors[n];if(!o)throw new Error("invalid final units");return e/i*o},r.isNumber=d,r.isObject=function(e){return!!e&&e.constructor===Object},r.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!d(e))throw new Error("bbox must only contain numbers")}))},r.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},161:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(929);r.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},r.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},r.containsNumber=function e(r){if(r.length>1&&n.isNumber(r[0])&&n.isNumber(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")},r.geojsonType=function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)},r.featureOf=function(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)},r.collectionOf=function(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,i=e.features;n<i.length;n++){var o=i[n];if(!o||"Feature"!==o.type||!o.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!o.geometry||o.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+o.geometry.type)}},r.getGeom=function(e){return"Feature"===e.type?e.geometry:e},r.getType=function(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}},734:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(929);function i(e,r,t){if(null!==e)for(var n,o,a,u,s,l,c,f,g=0,d=0,h=e.type,m="FeatureCollection"===h,y="Feature"===h,v=m?e.features.length:1,p=0;p<v;p++){s=(f=!!(c=m?e.features[p].geometry:y?e.geometry:e)&&"GeometryCollection"===c.type)?c.geometries.length:1;for(var w=0;w<s;w++){var b=0,P=0;if(null!==(u=f?c.geometries[w]:c)){l=u.coordinates;var E=u.type;switch(g=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===r(l,d,p,b,P))return!1;d++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===r(l[n],d,p,b,P))return!1;d++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(o=0;o<l[n].length-g;o++){if(!1===r(l[n][o],d,p,b,P))return!1;d++}"MultiLineString"===E&&b++,"Polygon"===E&&P++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,o=0;o<l[n].length;o++){for(a=0;a<l[n][o].length-g;a++){if(!1===r(l[n][o][a],d,p,b,P))return!1;d++}P++}b++}break;case"GeometryCollection":for(n=0;n<u.geometries.length;n++)if(!1===i(u.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function o(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function a(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function u(e,r){var t,n,i,o,a,u,s,l,c,f,g=0,d="FeatureCollection"===e.type,h="Feature"===e.type,m=d?e.features.length:1;for(t=0;t<m;t++){for(u=d?e.features[t].geometry:h?e.geometry:e,l=d?e.features[t].properties:h?e.properties:{},c=d?e.features[t].bbox:h?e.bbox:void 0,f=d?e.features[t].id:h?e.id:void 0,a=(s=!!u&&"GeometryCollection"===u.type)?u.geometries.length:1,i=0;i<a;i++)if(null!==(o=s?u.geometries[i]:u))switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(o,g,l,c,f))return!1;break;case"GeometryCollection":for(n=0;n<o.geometries.length;n++)if(!1===r(o.geometries[n],g,l,c,f))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,g,l,c,f))return!1;g++}}function s(e,r){u(e,(function(e,t,i,o,a){var u,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n.feature(e,i,{bbox:o,id:a}),t,0)&&void 0}switch(s){case"MultiPoint":u="Point";break;case"MultiLineString":u="LineString";break;case"MultiPolygon":u="Polygon"}for(var l=0;l<e.coordinates.length;l++){var c={type:u,coordinates:e.coordinates[l]};if(!1===r(n.feature(c,i),t,l))return!1}}))}function l(e,r){s(e,(function(e,t,o){var a=0;if(e.geometry){var u=e.geometry.type;if("Point"!==u&&"MultiPoint"!==u){var s,l=0,c=0,f=0;return!1!==i(e,(function(i,u,g,d,h){if(void 0===s||t>l||d>c||h>f)return s=i,l=t,c=d,f=h,void(a=0);var m=n.lineString([s,i],e.properties);if(!1===r(m,t,o,h,a))return!1;a++,s=i}))&&void 0}}}))}function c(e,r){if(!e)throw new Error("geojson is required");s(e,(function(e,t,i){if(null!==e.geometry){var o=e.geometry.type,a=e.geometry.coordinates;switch(o){case"LineString":if(!1===r(e,t,i,0,0))return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(!1===r(n.lineString(a[u],e.properties),t,i,u))return!1}}}))}r.coordAll=function(e){var r=[];return i(e,(function(e){r.push(e)})),r},r.coordEach=i,r.coordReduce=function(e,r,t,n){var o=t;return i(e,(function(e,n,i,a,u){o=0===n&&void 0===t?e:r(o,e,n,i,a,u)}),n),o},r.featureEach=a,r.featureReduce=function(e,r,t){var n=t;return a(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.findPoint=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.coordIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":return n.point(l,s,r);case"MultiPoint":return o<0&&(o=l.length+o),n.point(l[o],s,r);case"LineString":return u<0&&(u=l.length+u),n.point(l[u],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u),n.point(l[a][u],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u),n.point(l[o][u],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u),n.point(l[o][a][u],s,r)}throw new Error("geojson is invalid")},r.findSegment=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,i=r.featureIndex||0,o=r.multiFeatureIndex||0,a=r.geometryIndex||0,u=r.segmentIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":i<0&&(i=e.features.length+i),s=s||e.features[i].properties,t=e.features[i].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return u<0&&(u=l.length+u-1),n.lineString([l[u],l[u+1]],s,r);case"Polygon":return a<0&&(a=l.length+a),u<0&&(u=l[a].length+u-1),n.lineString([l[a][u],l[a][u+1]],s,r);case"MultiLineString":return o<0&&(o=l.length+o),u<0&&(u=l[o].length+u-1),n.lineString([l[o][u],l[o][u+1]],s,r);case"MultiPolygon":return o<0&&(o=l.length+o),a<0&&(a=l[o].length+a),u<0&&(u=l[o][a].length-u-1),n.lineString([l[o][a][u],l[o][a][u+1]],s,r)}throw new Error("geojson is invalid")},r.flattenEach=s,r.flattenReduce=function(e,r,t){var n=t;return s(e,(function(e,i,o){n=0===i&&0===o&&void 0===t?e:r(n,e,i,o)})),n},r.geomEach=u,r.geomReduce=function(e,r,t){var n=t;return u(e,(function(e,i,o,a,u){n=0===i&&void 0===t?e:r(n,e,i,o,a,u)})),n},r.lineEach=c,r.lineReduce=function(e,r,t){var n=t;return c(e,(function(e,i,o,a){n=0===i&&void 0===t?e:r(n,e,i,o,a)})),n},r.propEach=o,r.propReduce=function(e,r,t){var n=t;return o(e,(function(e,i){n=0===i&&void 0===t?e:r(n,e,i)})),n},r.segmentEach=l,r.segmentReduce=function(e,r,t){var n=t,i=!1;return l(e,(function(e,o,a,u,s){n=!1===i&&void 0===t?e:r(n,e,o,a,u,s),i=!0})),n}},166:function(e){e.exports=function(){"use strict";function e(t,n,i,o,a){for(;o>i;){if(o-i>600){var u=o-i+1,s=n-i+1,l=Math.log(u),c=.5*Math.exp(2*l/3),f=.5*Math.sqrt(l*c*(u-c)/u)*(s-u/2<0?-1:1);e(t,n,Math.max(i,Math.floor(n-s*c/u+f)),Math.min(o,Math.floor(n+(u-s)*c/u+f)),a)}var g=t[n],d=i,h=o;for(r(t,i,n),a(t[o],g)>0&&r(t,i,o);d<h;){for(r(t,d,h),d++,h--;a(t[d],g)<0;)d++;for(;a(t[h],g)>0;)h--}0===a(t[i],g)?r(t,i,h):r(t,++h,o),h<=n&&(i=h+1),n<=h&&(o=h-1)}}function r(e,r,t){var n=e[r];e[r]=e[t],e[t]=n}function t(e,r){return e<r?-1:e>r?1:0}return function(r,n,i,o,a){e(r,n,i||0,o||r.length-1,a||t)}}()},510:(e,r,t)=>{"use strict";e.exports=i,e.exports.default=i;var n=t(166);function i(e,r){if(!(this instanceof i))return new i(e,r);this._maxEntries=Math.max(4,e||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),r&&this._initFormat(r),this.clear()}function o(e,r,t){if(!t)return r.indexOf(e);for(var n=0;n<r.length;n++)if(t(e,r[n]))return n;return-1}function a(e,r){u(e,0,e.children.length,r,e)}function u(e,r,t,n,i){i||(i=m(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,a=r;a<t;a++)o=e.children[a],s(i,e.leaf?n(o):o);return i}function s(e,r){return e.minX=Math.min(e.minX,r.minX),e.minY=Math.min(e.minY,r.minY),e.maxX=Math.max(e.maxX,r.maxX),e.maxY=Math.max(e.maxY,r.maxY),e}function l(e,r){return e.minX-r.minX}function c(e,r){return e.minY-r.minY}function f(e){return(e.maxX-e.minX)*(e.maxY-e.minY)}function g(e){return e.maxX-e.minX+(e.maxY-e.minY)}function d(e,r){return e.minX<=r.minX&&e.minY<=r.minY&&r.maxX<=e.maxX&&r.maxY<=e.maxY}function h(e,r){return r.minX<=e.maxX&&r.minY<=e.maxY&&r.maxX>=e.minX&&r.maxY>=e.minY}function m(e){return{children:e,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function y(e,r,t,i,o){for(var a,u=[r,t];u.length;)(t=u.pop())-(r=u.pop())<=i||(a=r+Math.ceil((t-r)/i/2)*i,n(e,a,r,t,o),u.push(r,a,a,t))}i.prototype={all:function(){return this._all(this.data,[])},search:function(e){var r=this.data,t=[],n=this.toBBox;if(!h(e,r))return t;for(var i,o,a,u,s=[];r;){for(i=0,o=r.children.length;i<o;i++)a=r.children[i],h(e,u=r.leaf?n(a):a)&&(r.leaf?t.push(a):d(e,u)?this._all(a,t):s.push(a));r=s.pop()}return t},collides:function(e){var r=this.data,t=this.toBBox;if(!h(e,r))return!1;for(var n,i,o,a,u=[];r;){for(n=0,i=r.children.length;n<i;n++)if(o=r.children[n],h(e,a=r.leaf?t(o):o)){if(r.leaf||d(e,a))return!0;u.push(o)}r=u.pop()}return!1},load:function(e){if(!e||!e.length)return this;if(e.length<this._minEntries){for(var r=0,t=e.length;r<t;r++)this.insert(e[r]);return this}var n=this._build(e.slice(),0,e.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var i=this.data;this.data=n,n=i}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},insert:function(e){return e&&this._insert(e,this.data.height-1),this},clear:function(){return this.data=m([]),this},remove:function(e,r){if(!e)return this;for(var t,n,i,a,u=this.data,s=this.toBBox(e),l=[],c=[];u||l.length;){if(u||(u=l.pop(),n=l[l.length-1],t=c.pop(),a=!0),u.leaf&&-1!==(i=o(e,u.children,r)))return u.children.splice(i,1),l.push(u),this._condense(l),this;a||u.leaf||!d(u,s)?n?(t++,u=n.children[t],a=!1):u=null:(l.push(u),c.push(t),t=0,n=u,u=u.children[0])}return this},toBBox:function(e){return e},compareMinX:l,compareMinY:c,toJSON:function(){return this.data},fromJSON:function(e){return this.data=e,this},_all:function(e,r){for(var t=[];e;)e.leaf?r.push.apply(r,e.children):t.push.apply(t,e.children),e=t.pop();return r},_build:function(e,r,t,n){var i,o=t-r+1,u=this._maxEntries;if(o<=u)return a(i=m(e.slice(r,t+1)),this.toBBox),i;n||(n=Math.ceil(Math.log(o)/Math.log(u)),u=Math.ceil(o/Math.pow(u,n-1))),(i=m([])).leaf=!1,i.height=n;var s,l,c,f,g=Math.ceil(o/u),d=g*Math.ceil(Math.sqrt(u));for(y(e,r,t,d,this.compareMinX),s=r;s<=t;s+=d)for(y(e,s,c=Math.min(s+d-1,t),g,this.compareMinY),l=s;l<=c;l+=g)f=Math.min(l+g-1,c),i.children.push(this._build(e,l,f,n-1));return a(i,this.toBBox),i},_chooseSubtree:function(e,r,t,n){for(var i,o,a,u,s,l,c,g,d,h;n.push(r),!r.leaf&&n.length-1!==t;){for(c=g=1/0,i=0,o=r.children.length;i<o;i++)s=f(a=r.children[i]),d=e,h=a,(l=(Math.max(h.maxX,d.maxX)-Math.min(h.minX,d.minX))*(Math.max(h.maxY,d.maxY)-Math.min(h.minY,d.minY))-s)<g?(g=l,c=s<c?s:c,u=a):l===g&&s<c&&(c=s,u=a);r=u||r.children[0]}return r},_insert:function(e,r,t){var n=this.toBBox,i=t?e:n(e),o=[],a=this._chooseSubtree(i,this.data,r,o);for(a.children.push(e),s(a,i);r>=0&&o[r].children.length>this._maxEntries;)this._split(o,r),r--;this._adjustParentBBoxes(i,o,r)},_split:function(e,r){var t=e[r],n=t.children.length,i=this._minEntries;this._chooseSplitAxis(t,i,n);var o=this._chooseSplitIndex(t,i,n),u=m(t.children.splice(o,t.children.length-o));u.height=t.height,u.leaf=t.leaf,a(t,this.toBBox),a(u,this.toBBox),r?e[r-1].children.push(u):this._splitRoot(t,u)},_splitRoot:function(e,r){this.data=m([e,r]),this.data.height=e.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},_chooseSplitIndex:function(e,r,t){var n,i,o,a,s,l,c,g,d,h,m,y,v,p;for(l=c=1/0,n=r;n<=t-r;n++)d=i=u(e,0,n,this.toBBox),h=o=u(e,n,t,this.toBBox),void 0,void 0,void 0,void 0,m=Math.max(d.minX,h.minX),y=Math.max(d.minY,h.minY),v=Math.min(d.maxX,h.maxX),p=Math.min(d.maxY,h.maxY),a=Math.max(0,v-m)*Math.max(0,p-y),s=f(i)+f(o),a<l?(l=a,g=n,c=s<c?s:c):a===l&&s<c&&(c=s,g=n);return g},_chooseSplitAxis:function(e,r,t){var n=e.leaf?this.compareMinX:l,i=e.leaf?this.compareMinY:c;this._allDistMargin(e,r,t,n)<this._allDistMargin(e,r,t,i)&&e.children.sort(n)},_allDistMargin:function(e,r,t,n){e.children.sort(n);var i,o,a=this.toBBox,l=u(e,0,r,a),c=u(e,t-r,t,a),f=g(l)+g(c);for(i=r;i<t-r;i++)o=e.children[i],s(l,e.leaf?a(o):o),f+=g(l);for(i=t-r-1;i>=r;i--)o=e.children[i],s(c,e.leaf?a(o):o),f+=g(c);return f},_adjustParentBBoxes:function(e,r,t){for(var n=t;n>=0;n--)s(r[n],e)},_condense:function(e){for(var r,t=e.length-1;t>=0;t--)0===e[t].children.length?t>0?(r=e[t-1].children).splice(r.indexOf(e[t]),1):this.clear():a(e[t],this.toBBox)},_initFormat:function(e){var r=["return a"," - b",";"];this.compareMinX=new Function("a","b",r.join(e[0])),this.compareMinY=new Function("a","b",r.join(e[1])),this.toBBox=new Function("a","return {minX: a"+e[0]+", minY: a"+e[1]+", maxX: a"+e[2]+", maxY: a"+e[3]+"};")}}}},r={},function t(n){var i=r[n];if(void 0!==i)return i.exports;var o=r[n]={exports:{}};return e[n].call(o.exports,o,o.exports,t),o.exports}(10);var e,r}));
//# sourceMappingURL=random-points.min.js.map